diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 81ed249..af442f3 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -85,7 +85,8 @@ dtb-$(CONFIG_ROCKCHIP_PX30) += \
 	px30-engicam-px30-core-ctouch2.dtb \
 	px30-engicam-px30-core-ctouch2-of10.dtb \
 	px30-engicam-px30-core-edimm2.2.dtb \
-	rk3326-odroid-go2.dtb
+	rk3326-odroid-go2.dtb \
+	seco-px30-d23.dtb
 
 dtb-$(CONFIG_ROCKCHIP_RK3036) += \
 	rk3036-sdk.dtb
diff --git a/tools/rkcommon.c b/tools/rkcommon.c
index af2a4835f6..5979a62569 100644
--- a/tools/rkcommon.c
+++ b/tools/rkcommon.c
@@ -121,7 +121,7 @@ struct spl_info {
 };
 
 static struct spl_info spl_infos[] = {
-	{ "px30", "RK33", 0x2800, false, RK_HEADER_V1 },
+	{ "px30", "RK33", 0x40000, false, RK_HEADER_V1 },
 	{ "rk3036", "RK30", 0x1000, false, RK_HEADER_V1 },
 	{ "rk3128", "RK31", 0x1800, false, RK_HEADER_V1 },
 	{ "rk3188", "RK31", 0x8000 - 0x800, true, RK_HEADER_V1 },
diff --git a/arch/arm/dts/seco-px30-d23.dts b/arch/arm/dts/seco-px30-d23.dts
new file mode 100644
index 0000000000..256b981685
--- /dev/null
+++ b/arch/arm/dts/seco-px30-d23.dts
@@ -0,0 +1,417 @@
+/*
+ * (C) Copyright 2018 Rockchip Electronics Co., Ltd
+ * Copyright 2022 Seco
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+/dts-v1/;
+#include "seco-px30.dtsi"
+#include "seco-px30-u-boot.dtsi"
+#include <dt-bindings/input/input.h>
+#include <dt-bindings/pinctrl/rockchip.h>
+#include <dt-bindings/gpio/gpio.h>
+
+/ {
+	model = "Seco D23 PX30 board";
+	compatible = "rockchip,px30-evb", "rockchip,px30";
+
+	aliases {
+		mmc0 = &emmc;
+        	mmc1 = &sdmmc;
+	};
+
+	vcc_phy: vcc-phy-regulator {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc_phy";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+	};
+
+	vcc5v0_sys: vccsys {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc5v0_sys";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+	};
+};
+
+&cpu0 {
+	cpu-supply = <&vdd_arm>;
+};
+
+&cpu1 {
+	cpu-supply = <&vdd_arm>;
+};
+
+&cpu2 {
+	cpu-supply = <&vdd_arm>;
+};
+
+&cpu3 {
+	cpu-supply = <&vdd_arm>;
+};
+
+&gmac {
+	phy-supply = <&vcc_phy>;
+	clock_in_out = "output";
+	snps,reset-gpio = <&gpio2 13 GPIO_ACTIVE_LOW>;
+	snps,reset-active-low;
+	snps,reset-delays-us = <0 50000 50000>;
+	status = "okay";
+};
+
+&i2c0 {
+	status = "okay";
+
+	rk809: pmic@20 {
+		compatible = "rockchip,rk809";
+		reg = <0x20>;
+		interrupt-parent = <&gpio0>;
+		interrupts = <RK_PA7 IRQ_TYPE_LEVEL_LOW>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&pmic_int>;
+		rockchip,system-power-controller;
+		wakeup-source;
+		#clock-cells = <1>;
+		clock-output-names = "rk808-clkout1", "rk808-clkout2";
+
+		vcc1-supply = <&vcc5v0_sys>;
+		vcc2-supply = <&vcc5v0_sys>;
+		vcc3-supply = <&vcc5v0_sys>;
+		vcc4-supply = <&vcc5v0_sys>;
+		vcc5-supply = <&vcc3v3_sys>;
+		vcc6-supply = <&vcc3v3_sys>;
+		vcc7-supply = <&vcc3v3_sys>;
+		vcc8-supply = <&vcc3v3_sys>;
+		vcc9-supply = <&vcc5v0_sys>;
+
+		regulators {
+			vdd_logic: DCDC_REG1 {
+				regulator-name = "vdd_logic";
+				regulator-min-microvolt = <950000>;
+				regulator-max-microvolt = <1350000>;
+				regulator-ramp-delay = <6001>;
+				regulator-always-on;
+				regulator-boot-on;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <950000>;
+				};
+			};
+
+			vdd_arm: DCDC_REG2 {
+				regulator-name = "vdd_arm";
+				regulator-min-microvolt = <950000>;
+				regulator-max-microvolt = <1350000>;
+				regulator-ramp-delay = <6001>;
+				regulator-always-on;
+				regulator-boot-on;
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <950000>;
+				};
+			};
+
+			vcc_ddr: DCDC_REG3 {
+				regulator-name = "vcc_ddr";
+				regulator-always-on;
+				regulator-boot-on;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+				};
+			};
+
+			vcc_3v0: DCDC_REG4 {
+				regulator-name = "vcc_3v0";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <3000000>;
+				regulator-max-microvolt = <3000000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <3000000>;
+				};
+			};
+
+			vcc_1v0: LDO_REG1 {
+				regulator-name = "vcc_1v0";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1000000>;
+				regulator-max-microvolt = <1000000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <1000000>;
+				};
+			};
+
+			vcc1v8_soc: LDO_REG2 {
+				regulator-name = "vcc1v8_soc";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <1800000>;
+				};
+			};
+
+			vdd1v0_soc: LDO_REG3 {
+				regulator-name = "vcc1v0_soc";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1000000>;
+				regulator-max-microvolt = <1000000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <1000000>;
+				};
+			};
+
+			vcc3v0_pmu: LDO_REG4 {
+				regulator-name = "vcc3v0_pmu";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <3000000>;
+				regulator-max-microvolt = <3000000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <3000000>;
+				};
+			};
+
+			vccio_sd: LDO_REG5 {
+				regulator-name = "vccio_sd";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <3300000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <3300000>;
+				};
+			};
+
+			vcc_sd: LDO_REG6 {
+				regulator-name = "vcc_sd";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <3300000>;
+				};
+			};
+
+			vcc2v8_dvp: LDO_REG7 {
+				regulator-name = "vcc2v8_dvp";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <2800000>;
+				regulator-max-microvolt = <2800000>;
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <2800000>;
+				};
+			};
+
+			vcc1v8_dvp: LDO_REG8 {
+				regulator-name = "vcc1v8_dvp";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <1800000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <1800000>;
+				};
+			};
+
+			vdd1v5_dvp: LDO_REG9 {
+				regulator-name = "vdd1v5_dvp";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <1500000>;
+				regulator-max-microvolt = <1500000>;
+
+				regulator-state-mem {
+					regulator-off-in-suspend;
+					regulator-suspend-microvolt = <1500000>;
+				};
+			};
+
+			vcc3v3_sys: DCDC_REG5 {
+				regulator-name = "vcc3v3_sys";
+				regulator-always-on;
+				regulator-boot-on;
+				regulator-min-microvolt = <3300000>;
+				regulator-max-microvolt = <3300000>;
+
+				regulator-state-mem {
+					regulator-on-in-suspend;
+					regulator-suspend-microvolt = <3300000>;
+				};
+			};
+
+			vcc3v3_lcd: SWITCH_REG1 {
+				regulator-boot-on;
+				regulator-always-on;
+				regulator-name = "vcc3v3_lcd";
+			};
+
+			vcc5v0_host: SWITCH_REG2 {
+				regulator-name = "vcc5v0_host";
+				regulator-always-on;
+				regulator-boot-on;
+			};
+		};
+	};
+};
+
+&i2c1 {
+	status = "okay";
+	clock-frequency = <400000>;
+};
+
+&i2c2 {
+	status = "okay";
+};
+
+&io_domains {
+	status = "okay";
+	vccio1-supply = <&vcc1v8_soc>;
+	vccio2-supply = <&vccio_sd>;
+	vccio3-supply = <&vcc_3v0>;
+	vccio4-supply = <&vcc1v8_dvp>;
+	vccio5-supply = <&vcc1v8_soc>;
+};
+
+&pmu_io_domains {
+	status = "okay";
+	pmuio1-supply = <&vcc3v0_pmu>;
+	pmuio2-supply = <&vcc1v8_soc>; /* <&vcc3v0_pmu>;*/
+};
+
+&pwm1 {
+	status = "okay";
+};
+
+&sdmmc {
+	bus-width = <4>;
+	cap-sd-highspeed;
+	non-removable;
+	no-sdio;
+	no-mmc;
+	card-detect-delay = <800>;
+	sd-uhs-sdr12;
+	sd-uhs-sdr25;
+	sd-uhs-sdr50;
+	sd-uhs-sdr104;
+	vqmmc-supply = <&vccio_sd>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&sdmmc_clk &sdmmc_cmd &sdmmc_bus4>;
+	status = "okay";
+};
+
+&emmc {
+	cap-mmc-highspeed;
+	disable-wp;
+	no-sdio;
+	no-sd;
+	non-removable;
+	num-slots = <1>;
+	status = "okay";
+};
+
+&uart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart2m1_xfer>;
+	status = "okay";
+};
+
+&u2phy {
+	status = "okay";
+
+	u2phy_host: host-port {
+		status = "okay";
+	};
+
+	u2phy_otg: otg-port {
+		status = "okay";
+	};
+};
+
+&usb20_otg {
+	status = "okay";
+};
+
+&usb_host0_ehci {
+	status = "okay";
+};
+
+&usb_host0_ohci {
+	status = "okay";
+};
+
+&u2phy_otg {
+	status = "okay";
+};
+
+&u2phy_host {
+	status = "okay";
+};
+
+&gpio0 {
+	status = "okay";
+};
+
+&gpio1 {
+	status = "okay";
+};
+
+&gpio2 {
+	status = "okay";
+};
+
+&gpio3 {
+	status = "okay";
+};
+
+&pinctrl {
+	/* Pins that are not explicitely used by any devices */
+	pinctrl-names = "default";
+	pinctrl-0 = <&d23_pin_hog>;
+
+	hog {
+		d23_pin_hog: d23_pin_hog {
+			rockchip,pins =
+				<RK_GPIO1 RK_PB0 RK_FUNC_GPIO &pcfg_output_low>, /* IO_EXPB_RST */
+				<RK_GPIO1 RK_PB3 RK_FUNC_GPIO &pcfg_output_low>, /* IO_EXPA_RST */
+				<RK_GPIO0 RK_PB6 RK_FUNC_GPIO &pcfg_output_low>; /* IO_EXPA_RST revC */
+		};
+	};
+
+	pmic {
+		pmic_int: pmic_int {
+			rockchip,pins = <0 RK_PA7 RK_FUNC_GPIO &pcfg_pull_up>;
+		};
+	};
+};
diff --git a/arch/arm/dts/seco-px30-u-boot.dtsi b/arch/arm/dts/seco-px30-u-boot.dtsi
new file mode 100644
index 0000000000..e96a0cf0ab
--- /dev/null
+++ b/arch/arm/dts/seco-px30-u-boot.dtsi
@@ -0,0 +1,122 @@
+/*
+ * (C) Copyright 2019 Rockchip Electronics Co., Ltd
+ * Copyright 2022 Seco
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+/ {
+	aliases {
+		mmc0 = &emmc;
+		mmc1 = &sdmmc;
+	};
+
+	chosen {
+		u-boot,spl-boot-order = "same-as-spl", &emmc, &sdmmc;
+	};
+};
+
+&dmc {
+	u-boot,dm-pre-reloc;
+};
+
+&uart2 {
+	clock-frequency = <24000000>;
+	u-boot,dm-pre-reloc;
+};
+
+&sdmmc {
+	u-boot,dm-pre-reloc;
+
+	/* mmc to sram can't do dma, prevent aborts transferring TF-A parts */
+	u-boot,spl-fifo-mode;
+};
+
+&emmc {
+	u-boot,dm-pre-reloc;
+
+	/* mmc to sram can't do dma, prevent aborts transferring TF-A parts */
+	u-boot,spl-fifo-mode;
+};
+
+&grf {
+	u-boot,dm-pre-reloc;
+};
+
+&pmugrf {
+	u-boot,dm-pre-reloc;
+};
+
+&xin24m {
+	u-boot,dm-pre-reloc;
+};
+
+&cru {
+	u-boot,dm-pre-reloc;
+	/delete-property/ assigned-clocks;
+	/delete-property/ assigned-clock-rates;
+};
+
+&pmucru {
+	u-boot,dm-pre-reloc;
+	/delete-property/ assigned-clocks;
+	/delete-property/ assigned-clock-rates;
+};
+
+&saradc {
+	u-boot,dm-pre-reloc;
+	status = "okay";
+};
+
+&i2c0 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&i2c1 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&i2c2 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&gpio0 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&gpio1 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&gpio2 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&gpio3 {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&usb20_otg {
+	u-boot,dm-spl;
+};
+
+&usb2phy_grf {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&u2phy {
+	u-boot,dm-spl;
+	status = "okay";
+};
+
+&u2phy_otg {
+	u-boot,dm-spl;
+	status = "okay";
+};
diff --git a/arch/arm/dts/seco-px30.dtsi b/arch/arm/dts/seco-px30.dtsi
new file mode 100644
index 0000000000..d6bbfad5f1
--- /dev/null
+++ b/arch/arm/dts/seco-px30.dtsi
@@ -0,0 +1,2415 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright (c) 2018 Fuzhou Rockchip Electronics Co., Ltd
+ */
+
+#include <dt-bindings/clock/px30-cru.h>
+#include <dt-bindings/gpio/gpio.h>
+#include <dt-bindings/interrupt-controller/arm-gic.h>
+#include <dt-bindings/interrupt-controller/irq.h>
+#include <dt-bindings/pinctrl/rockchip.h>
+#include <dt-bindings/power/px30-power.h>
+#include <dt-bindings/soc/rockchip,boot-mode.h>
+#include <dt-bindings/thermal/thermal.h>
+
+/ {
+	compatible = "rockchip,px30";
+
+	interrupt-parent = <&gic>;
+	#address-cells = <2>;
+	#size-cells = <2>;
+
+	aliases {
+		ethernet0 = &gmac;
+		i2c0 = &i2c0;
+		i2c1 = &i2c1;
+		i2c2 = &i2c2;
+		i2c3 = &i2c3;
+		serial0 = &uart0;
+		serial1 = &uart1;
+		serial2 = &uart2;
+		serial3 = &uart3;
+		serial4 = &uart4;
+		serial5 = &uart5;
+		spi0 = &spi0;
+		spi1 = &spi1;
+	};
+
+	chosen {
+		stdout-path = "serial2:115200n8";
+	};
+
+	cpus {
+		#address-cells = <2>;
+		#size-cells = <0>;
+
+		cpu0: cpu@0 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a35";
+			reg = <0x0 0x0>;
+			enable-method = "psci";
+			clocks = <&cru ARMCLK>;
+			#cooling-cells = <2>;
+			cpu-idle-states = <&CPU_SLEEP &CLUSTER_SLEEP>;
+			dynamic-power-coefficient = <90>;
+			operating-points-v2 = <&cpu0_opp_table>;
+		};
+
+		cpu1: cpu@1 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a35";
+			reg = <0x0 0x1>;
+			enable-method = "psci";
+			clocks = <&cru ARMCLK>;
+			#cooling-cells = <2>;
+			cpu-idle-states = <&CPU_SLEEP &CLUSTER_SLEEP>;
+			dynamic-power-coefficient = <90>;
+			operating-points-v2 = <&cpu0_opp_table>;
+		};
+
+		cpu2: cpu@2 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a35";
+			reg = <0x0 0x2>;
+			enable-method = "psci";
+			clocks = <&cru ARMCLK>;
+			#cooling-cells = <2>;
+			cpu-idle-states = <&CPU_SLEEP &CLUSTER_SLEEP>;
+			dynamic-power-coefficient = <90>;
+			operating-points-v2 = <&cpu0_opp_table>;
+		};
+
+		cpu3: cpu@3 {
+			device_type = "cpu";
+			compatible = "arm,cortex-a35";
+			reg = <0x0 0x3>;
+			enable-method = "psci";
+			clocks = <&cru ARMCLK>;
+			#cooling-cells = <2>;
+			cpu-idle-states = <&CPU_SLEEP &CLUSTER_SLEEP>;
+			dynamic-power-coefficient = <90>;
+			operating-points-v2 = <&cpu0_opp_table>;
+		};
+
+		idle-states {
+			entry-method = "psci";
+
+			CPU_SLEEP: cpu-sleep {
+				compatible = "arm,idle-state";
+				local-timer-stop;
+				arm,psci-suspend-param = <0x0010000>;
+				entry-latency-us = <120>;
+				exit-latency-us = <250>;
+				min-residency-us = <900>;
+			};
+
+			CLUSTER_SLEEP: cluster-sleep {
+				compatible = "arm,idle-state";
+				local-timer-stop;
+				arm,psci-suspend-param = <0x1010000>;
+				entry-latency-us = <400>;
+				exit-latency-us = <500>;
+				min-residency-us = <2000>;
+			};
+		};
+	};
+
+	cpu0_opp_table: opp-table-0 {
+		compatible = "operating-points-v2";
+		opp-shared;
+
+		opp-600000000 {
+			opp-hz = /bits/ 64 <600000000>;
+			opp-microvolt = <950000 950000 1350000>;
+			clock-latency-ns = <40000>;
+			opp-suspend;
+		};
+		opp-816000000 {
+			opp-hz = /bits/ 64 <816000000>;
+			opp-microvolt = <1050000 1050000 1350000>;
+			clock-latency-ns = <40000>;
+		};
+		opp-1008000000 {
+			opp-hz = /bits/ 64 <1008000000>;
+			opp-microvolt = <1175000 1175000 1350000>;
+			clock-latency-ns = <40000>;
+		};
+		opp-1200000000 {
+			opp-hz = /bits/ 64 <1200000000>;
+			opp-microvolt = <1300000 1300000 1350000>;
+			clock-latency-ns = <40000>;
+		};
+		opp-1296000000 {
+			opp-hz = /bits/ 64 <1296000000>;
+			opp-microvolt = <1350000 1350000 1350000>;
+			clock-latency-ns = <40000>;
+		};
+	};
+
+	arm-pmu {
+		compatible = "arm,cortex-a35-pmu";
+		interrupts = <GIC_SPI 100 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 101 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 102 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 103 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-affinity = <&cpu0>, <&cpu1>, <&cpu2>, <&cpu3>;
+	};
+
+	dmc: dmc {
+		compatible = "rockchip,px30-dmc", "syscon";
+		reg = <0x0 0xff2a0000 0x0 0x1000>;
+	};
+
+	display_subsystem: display-subsystem {
+		compatible = "rockchip,display-subsystem";
+		ports = <&vopb_out>, <&vopl_out>;
+		status = "disabled";
+	};
+
+	firmware {
+		optee {
+			compatible = "linaro,optee-tz";
+			method = "smc";
+		};
+	};
+
+	gmac_clkin: external-gmac-clock {
+		compatible = "fixed-clock";
+		clock-frequency = <50000000>;
+		clock-output-names = "gmac_clkin";
+		#clock-cells = <0>;
+	};
+
+	psci {
+		compatible = "arm,psci-1.0";
+		method = "smc";
+	};
+
+	timer {
+		compatible = "arm,armv8-timer";
+		interrupts = <GIC_PPI 13 (GIC_CPU_MASK_SIMPLE(4) | IRQ_TYPE_LEVEL_HIGH)>,
+			     <GIC_PPI 14 (GIC_CPU_MASK_SIMPLE(4) | IRQ_TYPE_LEVEL_HIGH)>,
+			     <GIC_PPI 11 (GIC_CPU_MASK_SIMPLE(4) | IRQ_TYPE_LEVEL_HIGH)>,
+			     <GIC_PPI 10 (GIC_CPU_MASK_SIMPLE(4) | IRQ_TYPE_LEVEL_HIGH)>;
+	};
+
+	thermal_zones: thermal-zones {
+		soc_thermal: soc-thermal {
+			polling-delay-passive = <20>;
+			polling-delay = <1000>;
+			sustainable-power = <750>;
+			thermal-sensors = <&tsadc 0>;
+
+			trips {
+				threshold: trip-point-0 {
+					temperature = <70000>;
+					hysteresis = <2000>;
+					type = "passive";
+				};
+
+				target: trip-point-1 {
+					temperature = <85000>;
+					hysteresis = <2000>;
+					type = "passive";
+				};
+
+				soc_crit: soc-crit {
+					temperature = <115000>;
+					hysteresis = <2000>;
+					type = "critical";
+				};
+			};
+
+			cooling-maps {
+				map0 {
+					trip = <&target>;
+					cooling-device = <&cpu0 THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
+					contribution = <4096>;
+				};
+
+				map1 {
+					trip = <&target>;
+					cooling-device = <&gpu THERMAL_NO_LIMIT THERMAL_NO_LIMIT>;
+					contribution = <4096>;
+				};
+			};
+		};
+
+		gpu_thermal: gpu-thermal {
+			polling-delay-passive = <100>; /* milliseconds */
+			polling-delay = <1000>; /* milliseconds */
+			thermal-sensors = <&tsadc 1>;
+		};
+	};
+
+	xin24m: xin24m {
+		compatible = "fixed-clock";
+		#clock-cells = <0>;
+		clock-frequency = <24000000>;
+		clock-output-names = "xin24m";
+	};
+
+	pmu: power-management@ff000000 {
+		compatible = "rockchip,px30-pmu", "syscon", "simple-mfd";
+		reg = <0x0 0xff000000 0x0 0x1000>;
+
+		power: power-controller {
+			compatible = "rockchip,px30-power-controller";
+			#power-domain-cells = <1>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			/* These power domains are grouped by VD_LOGIC */
+			power-domain@PX30_PD_USB {
+				reg = <PX30_PD_USB>;
+				clocks = <&cru HCLK_HOST>,
+					 <&cru HCLK_OTG>,
+					 <&cru SCLK_OTG_ADP>;
+				pm_qos = <&qos_usb_host>, <&qos_usb_otg>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_SDCARD {
+				reg = <PX30_PD_SDCARD>;
+				clocks = <&cru HCLK_SDMMC>,
+					 <&cru SCLK_SDMMC>;
+				pm_qos = <&qos_sdmmc>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_GMAC {
+				reg = <PX30_PD_GMAC>;
+				clocks = <&cru ACLK_GMAC>,
+					 <&cru PCLK_GMAC>,
+					 <&cru SCLK_MAC_REF>,
+					 <&cru SCLK_GMAC_RX_TX>;
+				pm_qos = <&qos_gmac>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_MMC_NAND {
+				reg = <PX30_PD_MMC_NAND>;
+				clocks =  <&cru HCLK_NANDC>,
+					  <&cru HCLK_EMMC>,
+					  <&cru HCLK_SDIO>,
+					  <&cru HCLK_SFC>,
+					  <&cru SCLK_EMMC>,
+					  <&cru SCLK_NANDC>,
+					  <&cru SCLK_SDIO>,
+					  <&cru SCLK_SFC>;
+				pm_qos = <&qos_emmc>, <&qos_nand>,
+					 <&qos_sdio>, <&qos_sfc>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_VPU {
+				reg = <PX30_PD_VPU>;
+				clocks = <&cru ACLK_VPU>,
+					 <&cru HCLK_VPU>,
+					 <&cru SCLK_CORE_VPU>;
+				pm_qos = <&qos_vpu>, <&qos_vpu_r128>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_VO {
+				reg = <PX30_PD_VO>;
+				clocks = <&cru ACLK_RGA>,
+					 <&cru ACLK_VOPB>,
+					 <&cru ACLK_VOPL>,
+					 <&cru DCLK_VOPB>,
+					 <&cru DCLK_VOPL>,
+					 <&cru HCLK_RGA>,
+					 <&cru HCLK_VOPB>,
+					 <&cru HCLK_VOPL>,
+					 <&cru PCLK_MIPI_DSI>,
+					 <&cru SCLK_RGA_CORE>,
+					 <&cru SCLK_VOPB_PWM>;
+				pm_qos = <&qos_rga_rd>, <&qos_rga_wr>,
+					 <&qos_vop_m0>, <&qos_vop_m1>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_VI {
+				reg = <PX30_PD_VI>;
+				clocks = <&cru ACLK_CIF>,
+					 <&cru ACLK_ISP>,
+					 <&cru HCLK_CIF>,
+					 <&cru HCLK_ISP>,
+					 <&cru SCLK_ISP>;
+				pm_qos = <&qos_isp_128>, <&qos_isp_rd>,
+					 <&qos_isp_wr>, <&qos_isp_m1>,
+					 <&qos_vip>;
+				#power-domain-cells = <0>;
+			};
+			power-domain@PX30_PD_GPU {
+				reg = <PX30_PD_GPU>;
+				clocks = <&cru SCLK_GPU>;
+				pm_qos = <&qos_gpu>;
+				#power-domain-cells = <0>;
+			};
+		};
+	};
+
+	pmugrf: syscon@ff010000 {
+		compatible = "rockchip,px30-pmugrf", "syscon", "simple-mfd";
+		reg = <0x0 0xff010000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		pmu_io_domains: io-domains {
+			compatible = "rockchip,px30-pmu-io-voltage-domain";
+			status = "disabled";
+		};
+
+		reboot-mode {
+			compatible = "syscon-reboot-mode";
+			offset = <0x200>;
+			mode-bootloader = <BOOT_BL_DOWNLOAD>;
+			mode-fastboot = <BOOT_FASTBOOT>;
+			mode-loader = <BOOT_BL_DOWNLOAD>;
+			mode-normal = <BOOT_NORMAL>;
+			mode-recovery = <BOOT_RECOVERY>;
+		};
+	};
+
+	uart0: serial@ff030000 {
+		compatible = "rockchip,px30-uart", "snps,dw-apb-uart";
+		reg = <0x0 0xff030000 0x0 0x100>;
+		interrupts = <GIC_SPI 15 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&pmucru SCLK_UART0_PMU>, <&pmucru PCLK_UART0_PMU>;
+		clock-names = "baudclk", "apb_pclk";
+		dmas = <&dmac 0>, <&dmac 1>;
+		dma-names = "tx", "rx";
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&uart0_xfer &uart0_cts &uart0_rts>;
+		status = "disabled";
+	};
+
+	i2s1_2ch: i2s@ff070000 {
+		compatible = "rockchip,px30-i2s", "rockchip,rk3066-i2s";
+		reg = <0x0 0xff070000 0x0 0x1000>;
+		interrupts = <GIC_SPI 13 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_I2S1>, <&cru HCLK_I2S1>;
+		clock-names = "i2s_clk", "i2s_hclk";
+		dmas = <&dmac 18>, <&dmac 19>;
+		dma-names = "tx", "rx";
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2s1_2ch_sclk &i2s1_2ch_lrck
+			     &i2s1_2ch_sdi &i2s1_2ch_sdo>;
+		#sound-dai-cells = <0>;
+		status = "disabled";
+	};
+
+	i2s2_2ch: i2s@ff080000 {
+		compatible = "rockchip,px30-i2s", "rockchip,rk3066-i2s";
+		reg = <0x0 0xff080000 0x0 0x1000>;
+		interrupts = <GIC_SPI 14 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_I2S2>, <&cru HCLK_I2S2>;
+		clock-names = "i2s_clk", "i2s_hclk";
+		dmas = <&dmac 20>, <&dmac 21>;
+		dma-names = "tx", "rx";
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2s2_2ch_sclk &i2s2_2ch_lrck
+			     &i2s2_2ch_sdi &i2s2_2ch_sdo>;
+		#sound-dai-cells = <0>;
+		status = "disabled";
+	};
+
+	gic: interrupt-controller@ff131000 {
+		compatible = "arm,gic-400";
+		#interrupt-cells = <3>;
+		#address-cells = <0>;
+		interrupt-controller;
+		reg = <0x0 0xff131000 0 0x1000>,
+		      <0x0 0xff132000 0 0x2000>,
+		      <0x0 0xff134000 0 0x2000>,
+		      <0x0 0xff136000 0 0x2000>;
+		interrupts = <GIC_PPI 9
+		      (GIC_CPU_MASK_SIMPLE(4) | IRQ_TYPE_LEVEL_HIGH)>;
+	};
+
+	grf: syscon@ff140000 {
+		compatible = "rockchip,px30-grf", "syscon", "simple-mfd";
+		reg = <0x0 0xff140000 0x0 0x1000>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		io_domains: io-domains {
+			compatible = "rockchip,px30-io-voltage-domain";
+			status = "disabled";
+		};
+
+		lvds: lvds {
+			compatible = "rockchip,px30-lvds";
+			phys = <&dsi_dphy>;
+			phy-names = "dphy";
+			rockchip,grf = <&grf>;
+			rockchip,output = "lvds";
+			status = "disabled";
+
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				port@0 {
+					reg = <0>;
+					#address-cells = <1>;
+					#size-cells = <0>;
+
+					lvds_vopb_in: endpoint@0 {
+						reg = <0>;
+						remote-endpoint = <&vopb_out_lvds>;
+					};
+
+					lvds_vopl_in: endpoint@1 {
+						reg = <1>;
+						remote-endpoint = <&vopl_out_lvds>;
+					};
+				};
+			};
+		};
+
+		rgb: rgb {
+			compatible = "rockchip,px30-rgb";
+			pinctrl-names = "default", "sleep";
+			pinctrl-0 = <&lcdc_m0_rgb_pins>;
+			pinctrl-1 = <&lcdc_m0_sleep_pins>;
+			rockchip,grf = <&grf>;
+			rockchip,output = "rgb";
+			status = "disabled";
+
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				port@0 {
+					reg = <0>;
+					#address-cells = <1>;
+					#size-cells = <0>;
+
+					rgb_in_vopb: endpoint@0 {
+						reg = <0>;
+						remote-endpoint = <&vopb_out_rgb>;
+					};
+
+					rgb_in_vopl: endpoint@1 {
+						reg = <1>;
+						remote-endpoint = <&vopl_out_rgb>;
+					};
+				};
+			};
+		};
+	};
+
+	uart1: serial@ff158000 {
+		compatible = "rockchip,px30-uart", "snps,dw-apb-uart";
+		reg = <0x0 0xff158000 0x0 0x100>;
+		interrupts = <GIC_SPI 16 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_UART1>, <&cru PCLK_UART1>;
+		clock-names = "baudclk", "apb_pclk";
+		dmas = <&dmac 2>, <&dmac 3>;
+		dma-names = "tx", "rx";
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&uart1_xfer &uart1_cts &uart1_rts>;
+		status = "disabled";
+	};
+
+	uart2: serial@ff160000 {
+		compatible = "rockchip,px30-uart", "snps,dw-apb-uart";
+		reg = <0x0 0xff160000 0x0 0x100>;
+		interrupts = <GIC_SPI 17 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_UART2>, <&cru PCLK_UART2>;
+		clock-names = "baudclk", "apb_pclk";
+		dmas = <&dmac 4>, <&dmac 5>;
+		dma-names = "tx", "rx";
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&uart2m0_xfer>;
+		status = "disabled";
+	};
+
+	uart3: serial@ff168000 {
+		compatible = "rockchip,px30-uart", "snps,dw-apb-uart";
+		reg = <0x0 0xff168000 0x0 0x100>;
+		interrupts = <GIC_SPI 18 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_UART3>, <&cru PCLK_UART3>;
+		clock-names = "baudclk", "apb_pclk";
+		dmas = <&dmac 6>, <&dmac 7>;
+		dma-names = "tx", "rx";
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&uart3m1_xfer &uart3m1_cts &uart3m1_rts>;
+		status = "disabled";
+	};
+
+	uart4: serial@ff170000 {
+		compatible = "rockchip,px30-uart", "snps,dw-apb-uart";
+		reg = <0x0 0xff170000 0x0 0x100>;
+		interrupts = <GIC_SPI 19 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_UART4>, <&cru PCLK_UART4>;
+		clock-names = "baudclk", "apb_pclk";
+		dmas = <&dmac 8>, <&dmac 9>;
+		dma-names = "tx", "rx";
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&uart4_xfer &uart4_cts &uart4_rts>;
+		status = "disabled";
+	};
+
+	uart5: serial@ff178000 {
+		compatible = "rockchip,px30-uart", "snps,dw-apb-uart";
+		reg = <0x0 0xff178000 0x0 0x100>;
+		interrupts = <GIC_SPI 20 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_UART5>, <&cru PCLK_UART5>;
+		clock-names = "baudclk", "apb_pclk";
+		dmas = <&dmac 10>, <&dmac 11>;
+		dma-names = "tx", "rx";
+		reg-shift = <2>;
+		reg-io-width = <4>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&uart5_xfer &uart5_cts &uart5_rts>;
+		status = "disabled";
+	};
+
+	i2c0: i2c@ff180000 {
+		compatible = "rockchip,px30-i2c", "rockchip,rk3399-i2c";
+		reg = <0x0 0xff180000 0x0 0x1000>;
+		clocks =  <&cru SCLK_I2C0>, <&cru PCLK_I2C0>;
+		clock-names = "i2c", "pclk";
+		interrupts = <GIC_SPI 7 IRQ_TYPE_LEVEL_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2c0_xfer>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+	};
+
+	i2c1: i2c@ff190000 {
+		compatible = "rockchip,px30-i2c", "rockchip,rk3399-i2c";
+		reg = <0x0 0xff190000 0x0 0x1000>;
+		clocks = <&cru SCLK_I2C1>, <&cru PCLK_I2C1>;
+		clock-names = "i2c", "pclk";
+		interrupts = <GIC_SPI 8 IRQ_TYPE_LEVEL_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2c1_xfer>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+	};
+
+	i2c2: i2c@ff1a0000 {
+		compatible = "rockchip,px30-i2c", "rockchip,rk3399-i2c";
+		reg = <0x0 0xff1a0000 0x0 0x1000>;
+		clocks = <&cru SCLK_I2C2>, <&cru PCLK_I2C2>;
+		clock-names = "i2c", "pclk";
+		interrupts = <GIC_SPI 9 IRQ_TYPE_LEVEL_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2c2_xfer>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+	};
+
+	i2c3: i2c@ff1b0000 {
+		compatible = "rockchip,px30-i2c", "rockchip,rk3399-i2c";
+		reg = <0x0 0xff1b0000 0x0 0x1000>;
+		clocks = <&cru SCLK_I2C3>, <&cru PCLK_I2C3>;
+		clock-names = "i2c", "pclk";
+		interrupts = <GIC_SPI 10 IRQ_TYPE_LEVEL_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2c3_xfer>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+	};
+
+	spi0: spi@ff1d0000 {
+		compatible = "rockchip,px30-spi", "rockchip,rk3066-spi";
+		reg = <0x0 0xff1d0000 0x0 0x1000>;
+		interrupts = <GIC_SPI 26 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_SPI0>, <&cru PCLK_SPI0>;
+		clock-names = "spiclk", "apb_pclk";
+		dmas = <&dmac 12>, <&dmac 13>;
+		dma-names = "tx", "rx";
+		pinctrl-names = "default", "high_speed";
+		pinctrl-0 = <&spi0_clk &spi0_csn &spi0_miso &spi0_mosi>;
+		pinctrl-1 = <&spi0_clk_hs &spi0_csn &spi0_miso_hs &spi0_mosi_hs>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+	};
+
+	spi1: spi@ff1d8000 {
+		compatible = "rockchip,px30-spi", "rockchip,rk3066-spi";
+		reg = <0x0 0xff1d8000 0x0 0x1000>;
+		interrupts = <GIC_SPI 27 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_SPI1>, <&cru PCLK_SPI1>;
+		clock-names = "spiclk", "apb_pclk";
+		dmas = <&dmac 14>, <&dmac 15>;
+		dma-names = "tx", "rx";
+		pinctrl-names = "default", "high_speed";
+		pinctrl-0 = <&spi1_clk &spi1_csn0 &spi1_csn1 &spi1_miso &spi1_mosi>;
+		pinctrl-1 = <&spi1_clk_hs &spi1_csn0 &spi1_csn1 &spi1_miso_hs &spi1_mosi_hs>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+	};
+
+	wdt: watchdog@ff1e0000 {
+		compatible = "rockchip,px30-wdt", "snps,dw-wdt";
+		reg = <0x0 0xff1e0000 0x0 0x100>;
+		clocks = <&cru PCLK_WDT_NS>;
+		interrupts = <GIC_SPI 37 IRQ_TYPE_LEVEL_HIGH>;
+		status = "disabled";
+	};
+
+	pwm0: pwm@ff200000 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff200000 0x0 0x10>;
+		clocks = <&cru SCLK_PWM0>, <&cru PCLK_PWM0>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm0_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm1: pwm@ff200010 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff200010 0x0 0x10>;
+		clocks = <&cru SCLK_PWM0>, <&cru PCLK_PWM0>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm1_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm2: pwm@ff200020 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff200020 0x0 0x10>;
+		clocks = <&cru SCLK_PWM0>, <&cru PCLK_PWM0>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm2_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm3: pwm@ff200030 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff200030 0x0 0x10>;
+		clocks = <&cru SCLK_PWM0>, <&cru PCLK_PWM0>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm3_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm4: pwm@ff208000 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff208000 0x0 0x10>;
+		clocks = <&cru SCLK_PWM1>, <&cru PCLK_PWM1>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm4_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm5: pwm@ff208010 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff208010 0x0 0x10>;
+		clocks = <&cru SCLK_PWM1>, <&cru PCLK_PWM1>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm5_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm6: pwm@ff208020 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff208020 0x0 0x10>;
+		clocks = <&cru SCLK_PWM1>, <&cru PCLK_PWM1>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm6_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	pwm7: pwm@ff208030 {
+		compatible = "rockchip,px30-pwm", "rockchip,rk3328-pwm";
+		reg = <0x0 0xff208030 0x0 0x10>;
+		clocks = <&cru SCLK_PWM1>, <&cru PCLK_PWM1>;
+		clock-names = "pwm", "pclk";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pwm7_pin>;
+		#pwm-cells = <3>;
+		status = "disabled";
+	};
+
+	rktimer: timer@ff210000 {
+		compatible = "rockchip,px30-timer", "rockchip,rk3288-timer";
+		reg = <0x0 0xff210000 0x0 0x1000>;
+		interrupts = <GIC_SPI 30 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru PCLK_TIMER>, <&cru SCLK_TIMER0>;
+		clock-names = "pclk", "timer";
+	};
+
+	amba: bus {
+		compatible = "simple-bus";
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		dmac: dmac@ff240000 {
+			compatible = "arm,pl330", "arm,primecell";
+			reg = <0x0 0xff240000 0x0 0x4000>;
+			interrupts = <GIC_SPI 1 IRQ_TYPE_LEVEL_HIGH>,
+				     <GIC_SPI 2 IRQ_TYPE_LEVEL_HIGH>;
+			arm,pl330-periph-burst;
+			clocks = <&cru ACLK_DMAC>;
+			clock-names = "apb_pclk";
+			#dma-cells = <1>;
+		};
+	};
+
+	tsadc: tsadc@ff280000 {
+		compatible = "rockchip,px30-tsadc";
+		reg = <0x0 0xff280000 0x0 0x100>;
+		interrupts = <GIC_SPI 36 IRQ_TYPE_LEVEL_HIGH>;
+		assigned-clocks = <&cru SCLK_TSADC>;
+		assigned-clock-rates = <50000>;
+		clocks = <&cru SCLK_TSADC>, <&cru PCLK_TSADC>;
+		clock-names = "tsadc", "apb_pclk";
+		resets = <&cru SRST_TSADC>;
+		reset-names = "tsadc-apb";
+		rockchip,grf = <&grf>;
+		rockchip,hw-tshut-temp = <120000>;
+		pinctrl-names = "init", "default", "sleep";
+		pinctrl-0 = <&tsadc_otp_pin>;
+		pinctrl-1 = <&tsadc_otp_out>;
+		pinctrl-2 = <&tsadc_otp_pin>;
+		#thermal-sensor-cells = <1>;
+		status = "disabled";
+	};
+
+	saradc: saradc@ff288000 {
+		compatible = "rockchip,px30-saradc", "rockchip,rk3399-saradc";
+		reg = <0x0 0xff288000 0x0 0x100>;
+		interrupts = <GIC_SPI 84 IRQ_TYPE_LEVEL_HIGH>;
+		#io-channel-cells = <1>;
+		clocks = <&cru SCLK_SARADC>, <&cru PCLK_SARADC>;
+		clock-names = "saradc", "apb_pclk";
+		resets = <&cru SRST_SARADC_P>;
+		reset-names = "saradc-apb";
+		status = "disabled";
+	};
+
+	otp: nvmem@ff290000 {
+		compatible = "rockchip,px30-otp";
+		reg = <0x0 0xff290000 0x0 0x4000>;
+		clocks = <&cru SCLK_OTP_USR>, <&cru PCLK_OTP_NS>,
+			 <&cru PCLK_OTP_PHY>;
+		clock-names = "otp", "apb_pclk", "phy";
+		resets = <&cru SRST_OTP_PHY>;
+		reset-names = "phy";
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		/* Data cells */
+		cpu_id: id@7 {
+			reg = <0x07 0x10>;
+		};
+		cpu_leakage: cpu-leakage@17 {
+			reg = <0x17 0x1>;
+		};
+		performance: performance@1e {
+			reg = <0x1e 0x1>;
+			bits = <4 3>;
+		};
+	};
+
+	cru: clock-controller@ff2b0000 {
+		compatible = "rockchip,px30-cru";
+		reg = <0x0 0xff2b0000 0x0 0x1000>;
+		clocks = <&xin24m>, <&pmucru PLL_GPLL>;
+		clock-names = "xin24m", "gpll";
+		rockchip,grf = <&grf>;
+		#clock-cells = <1>;
+		#reset-cells = <1>;
+
+		assigned-clocks = <&cru PLL_NPLL>,
+			<&cru ACLK_BUS_PRE>, <&cru ACLK_PERI_PRE>,
+			<&cru HCLK_BUS_PRE>, <&cru HCLK_PERI_PRE>,
+			<&cru PCLK_BUS_PRE>, <&cru SCLK_GPU>;
+
+		assigned-clock-rates = <1188000000>,
+			<200000000>, <200000000>,
+			<150000000>, <150000000>,
+			<100000000>, <200000000>;
+	};
+
+	pmucru: clock-controller@ff2bc000 {
+		compatible = "rockchip,px30-pmucru";
+		reg = <0x0 0xff2bc000 0x0 0x1000>;
+		clocks = <&xin24m>;
+		clock-names = "xin24m";
+		rockchip,grf = <&grf>;
+		#clock-cells = <1>;
+		#reset-cells = <1>;
+
+		assigned-clocks =
+			<&pmucru PLL_GPLL>, <&pmucru PCLK_PMU_PRE>,
+			<&pmucru SCLK_WIFI_PMU>;
+		assigned-clock-rates =
+			<1200000000>, <100000000>,
+			<26000000>;
+	};
+
+	usb2phy_grf: syscon@ff2c0000 {
+		compatible = "rockchip,px30-usb2phy-grf", "syscon",
+			     "simple-mfd";
+		reg = <0x0 0xff2c0000 0x0 0x10000>;
+		#address-cells = <1>;
+		#size-cells = <1>;
+
+		u2phy: usb2phy@100 {
+			compatible = "rockchip,px30-usb2phy",	"rockchip,rk3328-usb2phy";
+			reg = <0x100 0x20>;
+			clocks = <&pmucru SCLK_USBPHY_REF>;
+			clock-names = "phyclk";
+			#clock-cells = <0>;
+			//assigned-clocks = <&cru USB480M>;
+			//assigned-clock-parents = <&u2phy>;
+			clock-output-names = "usb480m_phy";
+			status = "disabled";
+
+			u2phy_host: host-port {
+				#phy-cells = <0>;
+				interrupts = <GIC_SPI 68 IRQ_TYPE_LEVEL_HIGH>;
+				interrupt-names = "linestate";
+				status = "disabled";
+			};
+
+			u2phy_otg: otg-port {
+				#phy-cells = <0>;
+				interrupts = <GIC_SPI 66 IRQ_TYPE_LEVEL_HIGH>,
+                                           <GIC_SPI 65 IRQ_TYPE_LEVEL_HIGH>,
+                                           <GIC_SPI 64 IRQ_TYPE_LEVEL_HIGH>;
+				interrupt-names = "otg-bvalid", "otg-id",
+                                                "linestate";
+				status = "disabled";
+			};
+		};
+	};
+
+	dsi_dphy: phy@ff2e0000 {
+		compatible = "rockchip,px30-dsi-dphy";
+		reg = <0x0 0xff2e0000 0x0 0x10000>;
+		clocks = <&pmucru SCLK_MIPIDSIPHY_REF>, <&cru PCLK_MIPIDSIPHY>;
+		clock-names = "ref", "pclk";
+		resets = <&cru SRST_MIPIDSIPHY_P>;
+		reset-names = "apb";
+		#phy-cells = <0>;
+		power-domains = <&power PX30_PD_VO>;
+		status = "disabled";
+	};
+
+	csi_dphy: phy@ff2f0000 {
+		compatible = "rockchip,px30-csi-dphy";
+		reg = <0x0 0xff2f0000 0x0 0x4000>;
+		clocks = <&cru PCLK_MIPICSIPHY>;
+		clock-names = "pclk";
+		#phy-cells = <0>;
+		power-domains = <&power PX30_PD_VI>;
+		resets = <&cru SRST_MIPICSIPHY_P>;
+		reset-names = "apb";
+		rockchip,grf = <&grf>;
+		status = "disabled";
+	};
+
+	usb20_otg: usb@ff300000 {
+		compatible = "rockchip,px30-usb", "rockchip,rk3066-usb",
+			     "snps,dwc2";
+		reg = <0x0 0xff300000 0x0 0x40000>;
+		interrupts = <GIC_SPI 62 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_OTG>;
+		clock-names = "otg";
+		dr_mode = "otg";
+		g-np-tx-fifo-size = <16>;
+		g-rx-fifo-size = <280>;
+		g-tx-fifo-size = <256 128 128 64 32 16>;
+		phys = <&u2phy_otg>;
+		phy-names = "usb2-phy";
+		power-domains = <&power PX30_PD_USB>;
+		status = "disabled";
+	};
+
+	usb_host0_ehci: usb@ff340000 {
+		compatible = "generic-ehci";
+		reg = <0x0 0xff340000 0x0 0x10000>;
+		interrupts = <GIC_SPI 60 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_HOST>;
+		//clock-names = "usbhost", "utmi";
+		phys = <&u2phy_host>;
+		phy-names = "usb";
+		power-domains = <&power PX30_PD_USB>;
+		status = "disabled";
+	};
+
+	usb_host0_ohci: usb@ff350000 {
+		compatible = "generic-ohci";
+		reg = <0x0 0xff350000 0x0 0x10000>;
+		interrupts = <GIC_SPI 61 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_HOST>;
+		//clock-names = "usbhost", "utmi";
+		phys = <&u2phy_host>;
+		phy-names = "usb";
+		power-domains = <&power PX30_PD_USB>;
+		status = "disabled";
+	};
+
+	gmac: ethernet@ff360000 {
+		compatible = "rockchip,px30-gmac";
+		reg = <0x0 0xff360000 0x0 0x10000>;
+		interrupts = <GIC_SPI 43 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "macirq";
+		clocks = <&cru SCLK_GMAC>, <&cru SCLK_GMAC_RX_TX>,
+			 <&cru SCLK_GMAC_RX_TX>, <&cru SCLK_MAC_REF>,
+			 <&cru SCLK_MAC_REFOUT>, <&cru ACLK_GMAC>,
+			 <&cru PCLK_GMAC>, <&cru SCLK_GMAC_RMII>;
+		clock-names = "stmmaceth", "mac_clk_rx",
+			      "mac_clk_tx", "clk_mac_ref",
+			      "clk_mac_refout", "aclk_mac",
+			      "pclk_mac", "clk_mac_speed";
+		rockchip,grf = <&grf>;
+		phy-mode = "rmii";
+		pinctrl-names = "default";
+		pinctrl-0 = <&rmii_pins &mac_refclk_12ma>;
+		power-domains = <&power PX30_PD_GMAC>;
+		resets = <&cru SRST_GMAC_A>;
+		reset-names = "stmmaceth";
+		status = "disabled";
+	};
+
+	sdmmc: mmc@ff370000 {
+		compatible = "rockchip,px30-dw-mshc", "rockchip,rk3288-dw-mshc";
+		reg = <0x0 0xff370000 0x0 0x4000>;
+		interrupts = <GIC_SPI 54 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_SDMMC>, <&cru SCLK_SDMMC>,
+			 <&cru SCLK_SDMMC_DRV>, <&cru SCLK_SDMMC_SAMPLE>;
+		clock-names = "biu", "ciu", "ciu-drive", "ciu-sample";
+		bus-width = <4>;
+		fifo-depth = <0x100>;
+		max-frequency = <150000000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&sdmmc_clk &sdmmc_cmd &sdmmc_det &sdmmc_bus4>;
+		power-domains = <&power PX30_PD_SDCARD>;
+		status = "disabled";
+	};
+
+	sdio: mmc@ff380000 {
+		compatible = "rockchip,px30-dw-mshc", "rockchip,rk3288-dw-mshc";
+		reg = <0x0 0xff380000 0x0 0x4000>;
+		interrupts = <GIC_SPI 55 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_SDIO>, <&cru SCLK_SDIO>,
+			 <&cru SCLK_SDIO_DRV>, <&cru SCLK_SDIO_SAMPLE>;
+		clock-names = "biu", "ciu", "ciu-drive", "ciu-sample";
+		bus-width = <4>;
+		fifo-depth = <0x100>;
+		max-frequency = <150000000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&sdio_bus4 &sdio_cmd &sdio_clk>;
+		power-domains = <&power PX30_PD_MMC_NAND>;
+		status = "disabled";
+	};
+
+	emmc: mmc@ff390000 {
+		compatible = "rockchip,px30-dw-mshc", "rockchip,rk3288-dw-mshc";
+		reg = <0x0 0xff390000 0x0 0x4000>;
+		interrupts = <GIC_SPI 53 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_EMMC>, <&cru SCLK_EMMC>,
+			 <&cru SCLK_EMMC_DRV>, <&cru SCLK_EMMC_SAMPLE>;
+		clock-names = "biu", "ciu", "ciu-drive", "ciu-sample";
+		bus-width = <8>;
+		fifo-depth = <0x100>;
+		max-frequency = <150000000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&emmc_clk &emmc_cmd &emmc_bus8>;
+		power-domains = <&power PX30_PD_MMC_NAND>;
+		status = "disabled";
+	};
+
+	sfc: spi@ff3a0000 {
+		compatible = "rockchip,sfc";
+		reg = <0x0 0xff3a0000 0x0 0x4000>;
+		interrupts = <GIC_SPI 56 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru SCLK_SFC>, <&cru HCLK_SFC>;
+		clock-names = "clk_sfc", "hclk_sfc";
+		pinctrl-0 = <&sfc_clk &sfc_cs0 &sfc_bus4>;
+		pinctrl-names = "default";
+		power-domains = <&power PX30_PD_MMC_NAND>;
+		status = "disabled";
+	};
+
+	nfc: nand-controller@ff3b0000 {
+		compatible = "rockchip,px30-nfc";
+		reg = <0x0 0xff3b0000 0x0 0x4000>;
+		interrupts = <GIC_SPI 57 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru HCLK_NANDC>, <&cru SCLK_NANDC>;
+		clock-names = "ahb", "nfc";
+		assigned-clocks = <&cru SCLK_NANDC>;
+		assigned-clock-rates = <150000000>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&flash_ale &flash_bus8 &flash_cle &flash_cs0
+			     &flash_rdn &flash_rdy &flash_wrn &flash_dqs>;
+		power-domains = <&power PX30_PD_MMC_NAND>;
+		status = "disabled";
+	};
+
+	gpu_opp_table: opp-table-1 {
+		compatible = "operating-points-v2";
+
+		opp-200000000 {
+			opp-hz = /bits/ 64 <200000000>;
+			opp-microvolt = <950000>;
+		};
+		opp-300000000 {
+			opp-hz = /bits/ 64 <300000000>;
+			opp-microvolt = <975000>;
+		};
+		opp-400000000 {
+			opp-hz = /bits/ 64 <400000000>;
+			opp-microvolt = <1050000>;
+		};
+		opp-480000000 {
+			opp-hz = /bits/ 64 <480000000>;
+			opp-microvolt = <1125000>;
+		};
+	};
+
+	gpu: gpu@ff400000 {
+		compatible = "rockchip,px30-mali", "arm,mali-bifrost";
+		reg = <0x0 0xff400000 0x0 0x4000>;
+		interrupts = <GIC_SPI 47 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 46 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 45 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "job", "mmu", "gpu";
+		clocks = <&cru SCLK_GPU>;
+		#cooling-cells = <2>;
+		power-domains = <&power PX30_PD_GPU>;
+		operating-points-v2 = <&gpu_opp_table>;
+		status = "disabled";
+	};
+
+	vpu: video-codec@ff442000 {
+		compatible = "rockchip,px30-vpu";
+		reg = <0x0 0xff442000 0x0 0x800>;
+		interrupts = <GIC_SPI 80 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 79 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "vepu", "vdpu";
+		clocks = <&cru ACLK_VPU>, <&cru HCLK_VPU>;
+		clock-names = "aclk", "hclk";
+		iommus = <&vpu_mmu>;
+		power-domains = <&power PX30_PD_VPU>;
+	};
+
+	vpu_mmu: iommu@ff442800 {
+		compatible = "rockchip,iommu";
+		reg = <0x0 0xff442800 0x0 0x100>;
+		interrupts = <GIC_SPI 81 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru ACLK_VPU>, <&cru HCLK_VPU>;
+		clock-names = "aclk", "iface";
+		#iommu-cells = <0>;
+		power-domains = <&power PX30_PD_VPU>;
+	};
+
+	dsi: dsi@ff450000 {
+		compatible = "rockchip,px30-mipi-dsi";
+		reg = <0x0 0xff450000 0x0 0x10000>;
+		interrupts = <GIC_SPI 75 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru PCLK_MIPI_DSI>;
+		clock-names = "pclk";
+		phys = <&dsi_dphy>;
+		phy-names = "dphy";
+		power-domains = <&power PX30_PD_VO>;
+		resets = <&cru SRST_MIPIDSI_HOST_P>;
+		reset-names = "apb";
+		rockchip,grf = <&grf>;
+		#address-cells = <1>;
+		#size-cells = <0>;
+		status = "disabled";
+
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			port@0 {
+				reg = <0>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+
+				dsi_in_vopb: endpoint@0 {
+					reg = <0>;
+					remote-endpoint = <&vopb_out_dsi>;
+				};
+
+				dsi_in_vopl: endpoint@1 {
+					reg = <1>;
+					remote-endpoint = <&vopl_out_dsi>;
+				};
+			};
+		};
+	};
+
+	vopb: vop@ff460000 {
+		compatible = "rockchip,px30-vop-big";
+		reg = <0x0 0xff460000 0x0 0xefc>;
+		interrupts = <GIC_SPI 77 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru ACLK_VOPB>, <&cru DCLK_VOPB>,
+			 <&cru HCLK_VOPB>;
+		clock-names = "aclk_vop", "dclk_vop", "hclk_vop";
+		resets = <&cru SRST_VOPB_A>, <&cru SRST_VOPB_H>, <&cru SRST_VOPB>;
+		reset-names = "axi", "ahb", "dclk";
+		iommus = <&vopb_mmu>;
+		power-domains = <&power PX30_PD_VO>;
+		status = "disabled";
+
+		vopb_out: port {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			vopb_out_dsi: endpoint@0 {
+				reg = <0>;
+				remote-endpoint = <&dsi_in_vopb>;
+			};
+
+			vopb_out_lvds: endpoint@1 {
+				reg = <1>;
+				remote-endpoint = <&lvds_vopb_in>;
+			};
+
+			vopb_out_rgb: endpoint@2 {
+				reg = <2>;
+				remote-endpoint = <&rgb_in_vopb>;
+			};
+		};
+	};
+
+	vopb_mmu: iommu@ff460f00 {
+		compatible = "rockchip,iommu";
+		reg = <0x0 0xff460f00 0x0 0x100>;
+		interrupts = <GIC_SPI 77 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru ACLK_VOPB>, <&cru HCLK_VOPB>;
+		clock-names = "aclk", "iface";
+		power-domains = <&power PX30_PD_VO>;
+		#iommu-cells = <0>;
+		status = "disabled";
+	};
+
+	vopl: vop@ff470000 {
+		compatible = "rockchip,px30-vop-lit";
+		reg = <0x0 0xff470000 0x0 0xefc>;
+		interrupts = <GIC_SPI 78 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru ACLK_VOPL>, <&cru DCLK_VOPL>,
+			 <&cru HCLK_VOPL>;
+		clock-names = "aclk_vop", "dclk_vop", "hclk_vop";
+		resets = <&cru SRST_VOPL_A>, <&cru SRST_VOPL_H>, <&cru SRST_VOPL>;
+		reset-names = "axi", "ahb", "dclk";
+		iommus = <&vopl_mmu>;
+		power-domains = <&power PX30_PD_VO>;
+		status = "disabled";
+
+		vopl_out: port {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			vopl_out_dsi: endpoint@0 {
+				reg = <0>;
+				remote-endpoint = <&dsi_in_vopl>;
+			};
+
+			vopl_out_lvds: endpoint@1 {
+				reg = <1>;
+				remote-endpoint = <&lvds_vopl_in>;
+			};
+
+			vopl_out_rgb: endpoint@2 {
+				reg = <2>;
+				remote-endpoint = <&rgb_in_vopl>;
+			};
+		};
+	};
+
+	vopl_mmu: iommu@ff470f00 {
+		compatible = "rockchip,iommu";
+		reg = <0x0 0xff470f00 0x0 0x100>;
+		interrupts = <GIC_SPI 78 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "vopl_mmu";
+		clocks = <&cru ACLK_VOPL>, <&cru HCLK_VOPL>;
+		clock-names = "aclk", "iface";
+		power-domains = <&power PX30_PD_VO>;
+		#iommu-cells = <0>;
+		status = "disabled";
+	};
+
+	rk_rga: rk_rga@ff480000 {
+		compatible = "rockchip,rga2";
+		//dev_mode = <1>;
+		reg = <0x0 0xff480000 0x0 0x1000>;
+		interrupts = <GIC_SPI 76 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru ACLK_RGA>, <&cru HCLK_RGA>, <&cru SCLK_RGA_CORE>;
+		clock-names = "aclk_rga", "hclk_rga", "clk_rga";
+		power-domains = <&power PX30_PD_VO>;
+		dma-coherent;
+		status = "disabled";
+	};
+
+	isp: isp@ff4a0000 {
+		compatible = "rockchip,px30-cif-isp"; /*rk3326-rkisp1*/
+		reg = <0x0 0xff4a0000 0x0 0x8000>;
+		interrupts = <GIC_SPI 70 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 73 IRQ_TYPE_LEVEL_HIGH>,
+			     <GIC_SPI 74 IRQ_TYPE_LEVEL_HIGH>;
+		interrupt-names = "isp", "mi", "mipi";
+		clocks = <&cru SCLK_ISP>,
+			 <&cru ACLK_ISP>,
+			 <&cru HCLK_ISP>,
+			 <&cru PCLK_ISP>;
+		clock-names = "isp", "aclk", "hclk", "pclk";
+		iommus = <&isp_mmu>;
+		phys = <&csi_dphy>;
+		phy-names = "dphy";
+		power-domains = <&power PX30_PD_VI>;
+		status = "disabled";
+
+		ports {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			port@0 {
+				reg = <0>;
+				#address-cells = <1>;
+				#size-cells = <0>;
+			};
+		};
+	};
+
+	isp_mmu: iommu@ff4a8000 {
+		compatible = "rockchip,iommu";
+		reg = <0x0 0xff4a8000 0x0 0x100>;
+		interrupts = <GIC_SPI 70 IRQ_TYPE_LEVEL_HIGH>;
+		clocks = <&cru ACLK_ISP>, <&cru HCLK_ISP>;
+		clock-names = "aclk", "iface";
+		power-domains = <&power PX30_PD_VI>;
+		rockchip,disable-mmu-reset;
+		#iommu-cells = <0>;
+	};
+
+	qos_gmac: qos@ff518000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff518000 0x0 0x20>;
+	};
+
+	qos_gpu: qos@ff520000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff520000 0x0 0x20>;
+	};
+
+	qos_sdmmc: qos@ff52c000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff52c000 0x0 0x20>;
+	};
+
+	qos_emmc: qos@ff538000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff538000 0x0 0x20>;
+	};
+
+	qos_nand: qos@ff538080 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff538080 0x0 0x20>;
+	};
+
+	qos_sdio: qos@ff538100 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff538100 0x0 0x20>;
+	};
+
+	qos_sfc: qos@ff538180 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff538180 0x0 0x20>;
+	};
+
+	qos_usb_host: qos@ff540000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff540000 0x0 0x20>;
+	};
+
+	qos_usb_otg: qos@ff540080 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff540080 0x0 0x20>;
+	};
+
+	qos_isp_128: qos@ff548000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff548000 0x0 0x20>;
+	};
+
+	qos_isp_rd: qos@ff548080 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff548080 0x0 0x20>;
+	};
+
+	qos_isp_wr: qos@ff548100 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff548100 0x0 0x20>;
+	};
+
+	qos_isp_m1: qos@ff548180 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff548180 0x0 0x20>;
+	};
+
+	qos_vip: qos@ff548200 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff548200 0x0 0x20>;
+	};
+
+	qos_rga_rd: qos@ff550000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff550000 0x0 0x20>;
+	};
+
+	qos_rga_wr: qos@ff550080 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff550080 0x0 0x20>;
+	};
+
+	qos_vop_m0: qos@ff550100 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff550100 0x0 0x20>;
+	};
+
+	qos_vop_m1: qos@ff550180 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff550180 0x0 0x20>;
+	};
+
+	qos_vpu: qos@ff558000 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff558000 0x0 0x20>;
+	};
+
+	qos_vpu_r128: qos@ff558080 {
+		compatible = "rockchip,px30-qos", "syscon";
+		reg = <0x0 0xff558080 0x0 0x20>;
+	};
+
+	pinctrl: pinctrl {
+		compatible = "rockchip,px30-pinctrl";
+		rockchip,grf = <&grf>;
+		rockchip,pmu = <&pmugrf>;
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		gpio0: gpio0@ff040000 {
+			compatible = "rockchip,gpio-bank";
+			reg = <0x0 0xff040000 0x0 0x100>;
+			interrupts = <GIC_SPI 3 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&pmucru PCLK_GPIO0_PMU>;
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			interrupt-controller;
+			#interrupt-cells = <2>;
+		};
+
+		gpio1: gpio1@ff250000 {
+			compatible = "rockchip,gpio-bank";
+			reg = <0x0 0xff250000 0x0 0x100>;
+			interrupts = <GIC_SPI 4 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&cru PCLK_GPIO1>;
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			interrupt-controller;
+			#interrupt-cells = <2>;
+		};
+
+		gpio2: gpio2@ff260000 {
+			compatible = "rockchip,gpio-bank";
+			reg = <0x0 0xff260000 0x0 0x100>;
+			interrupts = <GIC_SPI 5 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&cru PCLK_GPIO2>;
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			interrupt-controller;
+			#interrupt-cells = <2>;
+		};
+
+		gpio3: gpio3@ff270000 {
+			compatible = "rockchip,gpio-bank";
+			reg = <0x0 0xff270000 0x0 0x100>;
+			interrupts = <GIC_SPI 6 IRQ_TYPE_LEVEL_HIGH>;
+			clocks = <&cru PCLK_GPIO3>;
+			gpio-controller;
+			#gpio-cells = <2>;
+
+			interrupt-controller;
+			#interrupt-cells = <2>;
+		};
+
+		pcfg_pull_up: pcfg-pull-up {
+			bias-pull-up;
+		};
+
+		pcfg_pull_down: pcfg-pull-down {
+			bias-pull-down;
+		};
+
+		pcfg_pull_none: pcfg-pull-none {
+			bias-disable;
+		};
+
+		pcfg_pull_none_2ma: pcfg-pull-none-2ma {
+			bias-disable;
+			drive-strength = <2>;
+		};
+
+		pcfg_pull_up_2ma: pcfg-pull-up-2ma {
+			bias-pull-up;
+			drive-strength = <2>;
+		};
+
+		pcfg_pull_up_4ma: pcfg-pull-up-4ma {
+			bias-pull-up;
+			drive-strength = <4>;
+		};
+
+		pcfg_pull_none_4ma: pcfg-pull-none-4ma {
+			bias-disable;
+			drive-strength = <4>;
+		};
+
+		pcfg_pull_down_4ma: pcfg-pull-down-4ma {
+			bias-pull-down;
+			drive-strength = <4>;
+		};
+
+		pcfg_pull_none_8ma: pcfg-pull-none-8ma {
+			bias-disable;
+			drive-strength = <8>;
+		};
+
+		pcfg_pull_up_8ma: pcfg-pull-up-8ma {
+			bias-pull-up;
+			drive-strength = <8>;
+		};
+
+		pcfg_pull_none_12ma: pcfg-pull-none-12ma {
+			bias-disable;
+			drive-strength = <12>;
+		};
+
+		pcfg_pull_up_12ma: pcfg-pull-up-12ma {
+			bias-pull-up;
+			drive-strength = <12>;
+		};
+
+		pcfg_pull_none_smt: pcfg-pull-none-smt {
+			bias-disable;
+			input-schmitt-enable;
+		};
+
+		pcfg_output_high: pcfg-output-high {
+			output-high;
+		};
+
+		pcfg_output_low: pcfg-output-low {
+			output-low;
+		};
+
+		pcfg_input_high: pcfg-input-high {
+			bias-pull-up;
+			input-enable;
+		};
+
+		pcfg_input: pcfg-input {
+			input-enable;
+		};
+
+		i2c0 {
+			i2c0_xfer: i2c0-xfer {
+				rockchip,pins =
+					<0 RK_PB0 1 &pcfg_pull_none_smt>,
+					<0 RK_PB1 1 &pcfg_pull_none_smt>;
+			};
+		};
+
+		i2c1 {
+			i2c1_xfer: i2c1-xfer {
+				rockchip,pins =
+					<0 RK_PC2 1 &pcfg_pull_none_smt>,
+					<0 RK_PC3 1 &pcfg_pull_none_smt>;
+			};
+		};
+
+		i2c2 {
+			i2c2_xfer: i2c2-xfer {
+				rockchip,pins =
+					<2 RK_PB7 2 &pcfg_pull_none_smt>,
+					<2 RK_PC0 2 &pcfg_pull_none_smt>;
+			};
+		};
+
+		i2c3 {
+			i2c3_xfer: i2c3-xfer {
+				rockchip,pins =
+					<1 RK_PB4 4 &pcfg_pull_none_smt>,
+					<1 RK_PB5 4 &pcfg_pull_none_smt>;
+			};
+		};
+
+		tsadc {
+			tsadc_otp_pin: tsadc-otp-pin {
+				rockchip,pins =
+					<0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
+			};
+
+			tsadc_otp_out: tsadc-otp-out {
+				rockchip,pins =
+					<0 RK_PA6 1 &pcfg_pull_none>;
+			};
+		};
+
+		uart0 {
+			uart0_xfer: uart0-xfer {
+				rockchip,pins =
+					<0 RK_PB2 1 &pcfg_pull_up>,
+					<0 RK_PB3 1 &pcfg_pull_up>;
+			};
+
+			uart0_cts: uart0-cts {
+				rockchip,pins =
+					<0 RK_PB4 1 &pcfg_pull_none>;
+			};
+
+			uart0_rts: uart0-rts {
+				rockchip,pins =
+					<0 RK_PB5 1 &pcfg_pull_none>;
+			};
+		};
+
+		uart1 {
+			uart1_xfer: uart1-xfer {
+				rockchip,pins =
+					<1 RK_PC1 1 &pcfg_pull_up>,
+					<1 RK_PC0 1 &pcfg_pull_up>;
+			};
+
+			uart1_cts: uart1-cts {
+				rockchip,pins =
+					<1 RK_PC2 1 &pcfg_pull_none>;
+			};
+
+			uart1_rts: uart1-rts {
+				rockchip,pins =
+					<1 RK_PC3 1 &pcfg_pull_none>;
+			};
+		};
+
+		uart2-m0 {
+			uart2m0_xfer: uart2m0-xfer {
+				rockchip,pins =
+					<1 RK_PD2 2 &pcfg_pull_up>,
+					<1 RK_PD3 2 &pcfg_pull_up>;
+			};
+		};
+
+		uart2-m1 {
+			uart2m1_xfer: uart2m1-xfer {
+				rockchip,pins =
+					<2 RK_PB4 2 &pcfg_pull_up>,
+					<2 RK_PB6 2 &pcfg_pull_up>;
+			};
+		};
+
+		uart3-m0 {
+			uart3m0_xfer: uart3m0-xfer {
+				rockchip,pins =
+					<0 RK_PC0 2 &pcfg_pull_up>,
+					<0 RK_PC1 2 &pcfg_pull_up>;
+			};
+
+			uart3m0_cts: uart3m0-cts {
+				rockchip,pins =
+					<0 RK_PC2 2 &pcfg_pull_none>;
+			};
+
+			uart3m0_rts: uart3m0-rts {
+				rockchip,pins =
+					<0 RK_PC3 2 &pcfg_pull_none>;
+			};
+		};
+
+		uart3-m1 {
+			uart3m1_xfer: uart3m1-xfer {
+				rockchip,pins =
+					<1 RK_PB6 2 &pcfg_pull_up>,
+					<1 RK_PB7 2 &pcfg_pull_up>;
+			};
+
+			uart3m1_cts: uart3m1-cts {
+				rockchip,pins =
+					<1 RK_PB4 2 &pcfg_pull_none>;
+			};
+
+			uart3m1_rts: uart3m1-rts {
+				rockchip,pins =
+					<1 RK_PB5 2 &pcfg_pull_none>;
+			};
+		};
+
+		uart4 {
+			uart4_xfer: uart4-xfer {
+				rockchip,pins =
+					<1 RK_PD4 2 &pcfg_pull_up>,
+					<1 RK_PD5 2 &pcfg_pull_up>;
+			};
+
+			uart4_cts: uart4-cts {
+				rockchip,pins =
+					<1 RK_PD6 2 &pcfg_pull_none>;
+			};
+
+			uart4_rts: uart4-rts {
+				rockchip,pins =
+					<1 RK_PD7 2 &pcfg_pull_none>;
+			};
+		};
+
+		uart5 {
+			uart5_xfer: uart5-xfer {
+				rockchip,pins =
+					<3 RK_PA2 4 &pcfg_pull_up>,
+					<3 RK_PA1 4 &pcfg_pull_up>;
+			};
+
+			uart5_cts: uart5-cts {
+				rockchip,pins =
+					<3 RK_PA3 4 &pcfg_pull_none>;
+			};
+
+			uart5_rts: uart5-rts {
+				rockchip,pins =
+					<3 RK_PA5 4 &pcfg_pull_none>;
+			};
+		};
+
+		spi0 {
+			spi0_clk: spi0-clk {
+				rockchip,pins =
+					<1 RK_PB7 3 &pcfg_pull_up_4ma>;
+			};
+
+			spi0_csn: spi0-csn {
+				rockchip,pins =
+					<1 RK_PB6 3 &pcfg_pull_up_4ma>;
+			};
+
+			spi0_miso: spi0-miso {
+				rockchip,pins =
+					<1 RK_PB5 3 &pcfg_pull_up_4ma>;
+			};
+
+			spi0_mosi: spi0-mosi {
+				rockchip,pins =
+					<1 RK_PB4 3 &pcfg_pull_up_4ma>;
+			};
+
+			spi0_clk_hs: spi0-clk-hs {
+				rockchip,pins =
+					<1 RK_PB7 3 &pcfg_pull_up_8ma>;
+			};
+
+			spi0_miso_hs: spi0-miso-hs {
+				rockchip,pins =
+					<1 RK_PB5 3 &pcfg_pull_up_8ma>;
+			};
+
+			spi0_mosi_hs: spi0-mosi-hs {
+				rockchip,pins =
+					<1 RK_PB4 3 &pcfg_pull_up_8ma>;
+			};
+		};
+
+		spi1 {
+			spi1_clk: spi1-clk {
+				rockchip,pins =
+					<3 RK_PB7 4 &pcfg_pull_up_4ma>;
+			};
+
+			spi1_csn0: spi1-csn0 {
+				rockchip,pins =
+					<3 RK_PB1 4 &pcfg_pull_up_4ma>;
+			};
+
+			spi1_csn1: spi1-csn1 {
+				rockchip,pins =
+					<3 RK_PB2 2 &pcfg_pull_up_4ma>;
+			};
+
+			spi1_miso: spi1-miso {
+				rockchip,pins =
+					<3 RK_PB6 4 &pcfg_pull_up_4ma>;
+			};
+
+			spi1_mosi: spi1-mosi {
+				rockchip,pins =
+					<3 RK_PB4 4 &pcfg_pull_up_4ma>;
+			};
+
+			spi1_clk_hs: spi1-clk-hs {
+				rockchip,pins =
+					<3 RK_PB7 4 &pcfg_pull_up_8ma>;
+			};
+
+			spi1_miso_hs: spi1-miso-hs {
+				rockchip,pins =
+					<3 RK_PB6 4 &pcfg_pull_up_8ma>;
+			};
+
+			spi1_mosi_hs: spi1-mosi-hs {
+				rockchip,pins =
+					<3 RK_PB4 4 &pcfg_pull_up_8ma>;
+			};
+		};
+
+		pdm {
+			pdm_clk0m0: pdm-clk0m0 {
+				rockchip,pins =
+					<3 RK_PC6 2 &pcfg_pull_none>;
+			};
+
+			pdm_clk0m1: pdm-clk0m1 {
+				rockchip,pins =
+					<2 RK_PC6 1 &pcfg_pull_none>;
+			};
+
+			pdm_clk1: pdm-clk1 {
+				rockchip,pins =
+					<3 RK_PC7 2 &pcfg_pull_none>;
+			};
+
+			pdm_sdi0m0: pdm-sdi0m0 {
+				rockchip,pins =
+					<3 RK_PD3 2 &pcfg_pull_none>;
+			};
+
+			pdm_sdi0m1: pdm-sdi0m1 {
+				rockchip,pins =
+					<2 RK_PC5 2 &pcfg_pull_none>;
+			};
+
+			pdm_sdi1: pdm-sdi1 {
+				rockchip,pins =
+					<3 RK_PD0 2 &pcfg_pull_none>;
+			};
+
+			pdm_sdi2: pdm-sdi2 {
+				rockchip,pins =
+					<3 RK_PD1 2 &pcfg_pull_none>;
+			};
+
+			pdm_sdi3: pdm-sdi3 {
+				rockchip,pins =
+					<3 RK_PD2 2 &pcfg_pull_none>;
+			};
+
+			pdm_clk0m0_sleep: pdm-clk0m0-sleep {
+				rockchip,pins =
+					<3 RK_PC6 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_clk0m_sleep1: pdm-clk0m1-sleep {
+				rockchip,pins =
+					<2 RK_PC6 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_clk1_sleep: pdm-clk1-sleep {
+				rockchip,pins =
+					<3 RK_PC7 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_sdi0m0_sleep: pdm-sdi0m0-sleep {
+				rockchip,pins =
+					<3 RK_PD3 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_sdi0m1_sleep: pdm-sdi0m1-sleep {
+				rockchip,pins =
+					<2 RK_PC5 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_sdi1_sleep: pdm-sdi1-sleep {
+				rockchip,pins =
+					<3 RK_PD0 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_sdi2_sleep: pdm-sdi2-sleep {
+				rockchip,pins =
+					<3 RK_PD1 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+
+			pdm_sdi3_sleep: pdm-sdi3-sleep {
+				rockchip,pins =
+					<3 RK_PD2 RK_FUNC_GPIO &pcfg_input_high>;
+			};
+		};
+
+		i2s0 {
+			i2s0_8ch_mclk: i2s0-8ch-mclk {
+				rockchip,pins =
+					<3 RK_PC1 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sclktx: i2s0-8ch-sclktx {
+				rockchip,pins =
+					<3 RK_PC3 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sclkrx: i2s0-8ch-sclkrx {
+				rockchip,pins =
+					<3 RK_PB4 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_lrcktx: i2s0-8ch-lrcktx {
+				rockchip,pins =
+					<3 RK_PC2 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_lrckrx: i2s0-8ch-lrckrx {
+				rockchip,pins =
+					<3 RK_PB5 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdo0: i2s0-8ch-sdo0 {
+				rockchip,pins =
+					<3 RK_PC4 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdo1: i2s0-8ch-sdo1 {
+				rockchip,pins =
+					<3 RK_PC0 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdo2: i2s0-8ch-sdo2 {
+				rockchip,pins =
+					<3 RK_PB7 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdo3: i2s0-8ch-sdo3 {
+				rockchip,pins =
+					<3 RK_PB6 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdi0: i2s0-8ch-sdi0 {
+				rockchip,pins =
+					<3 RK_PC5 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdi1: i2s0-8ch-sdi1 {
+				rockchip,pins =
+					<3 RK_PB3 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdi2: i2s0-8ch-sdi2 {
+				rockchip,pins =
+					<3 RK_PB1 2 &pcfg_pull_none>;
+			};
+
+			i2s0_8ch_sdi3: i2s0-8ch-sdi3 {
+				rockchip,pins =
+					<3 RK_PB0 2 &pcfg_pull_none>;
+			};
+		};
+
+		i2s1 {
+			i2s1_2ch_mclk: i2s1-2ch-mclk {
+				rockchip,pins =
+					<2 RK_PC3 1 &pcfg_pull_none>;
+			};
+
+			i2s1_2ch_sclk: i2s1-2ch-sclk {
+				rockchip,pins =
+					<2 RK_PC2 1 &pcfg_pull_none>;
+			};
+
+			i2s1_2ch_lrck: i2s1-2ch-lrck {
+				rockchip,pins =
+					<2 RK_PC1 1 &pcfg_pull_none>;
+			};
+
+			i2s1_2ch_sdi: i2s1-2ch-sdi {
+				rockchip,pins =
+					<2 RK_PC5 1 &pcfg_pull_none>;
+			};
+
+			i2s1_2ch_sdo: i2s1-2ch-sdo {
+				rockchip,pins =
+					<2 RK_PC4 1 &pcfg_pull_none>;
+			};
+		};
+
+		i2s2 {
+			i2s2_2ch_mclk: i2s2-2ch-mclk {
+				rockchip,pins =
+					<3 RK_PA1 2 &pcfg_pull_none>;
+			};
+
+			i2s2_2ch_sclk: i2s2-2ch-sclk {
+				rockchip,pins =
+					<3 RK_PA2 2 &pcfg_pull_none>;
+			};
+
+			i2s2_2ch_lrck: i2s2-2ch-lrck {
+				rockchip,pins =
+					<3 RK_PA3 2 &pcfg_pull_none>;
+			};
+
+			i2s2_2ch_sdi: i2s2-2ch-sdi {
+				rockchip,pins =
+					<3 RK_PA5 2 &pcfg_pull_none>;
+			};
+
+			i2s2_2ch_sdo: i2s2-2ch-sdo {
+				rockchip,pins =
+					<3 RK_PA7 2 &pcfg_pull_none>;
+			};
+		};
+
+		sdmmc {
+			sdmmc_clk: sdmmc-clk {
+				rockchip,pins =
+					<1 RK_PD6 1 &pcfg_pull_none_8ma>;
+			};
+
+			sdmmc_cmd: sdmmc-cmd {
+				rockchip,pins =
+					<1 RK_PD7 1 &pcfg_pull_up_8ma>;
+			};
+
+			sdmmc_det: sdmmc-det {
+				rockchip,pins =
+					<0 RK_PA3 1 &pcfg_pull_up_8ma>;
+			};
+
+			sdmmc_bus1: sdmmc-bus1 {
+				rockchip,pins =
+					<1 RK_PD2 1 &pcfg_pull_up_8ma>;
+			};
+
+			sdmmc_bus4: sdmmc-bus4 {
+				rockchip,pins =
+					<1 RK_PD2 1 &pcfg_pull_up_8ma>,
+					<1 RK_PD3 1 &pcfg_pull_up_8ma>,
+					<1 RK_PD4 1 &pcfg_pull_up_8ma>,
+					<1 RK_PD5 1 &pcfg_pull_up_8ma>;
+			};
+		};
+
+		sdio {
+			sdio_clk: sdio-clk {
+				rockchip,pins =
+					<1 RK_PC5 1 &pcfg_pull_none>;
+			};
+
+			sdio_cmd: sdio-cmd {
+				rockchip,pins =
+					<1 RK_PC4 1 &pcfg_pull_up>;
+			};
+
+			sdio_bus4: sdio-bus4 {
+				rockchip,pins =
+					<1 RK_PC6 1 &pcfg_pull_up>,
+					<1 RK_PC7 1 &pcfg_pull_up>,
+					<1 RK_PD0 1 &pcfg_pull_up>,
+					<1 RK_PD1 1 &pcfg_pull_up>;
+			};
+		};
+
+		emmc {
+			emmc_clk: emmc-clk {
+				rockchip,pins =
+					<1 RK_PB1 2 &pcfg_pull_none_8ma>;
+			};
+
+			emmc_cmd: emmc-cmd {
+				rockchip,pins =
+					<1 RK_PB2 2 &pcfg_pull_up_8ma>;
+			};
+
+			emmc_rstnout: emmc-rstnout {
+				rockchip,pins =
+					<1 RK_PB3 2 &pcfg_pull_none>;
+			};
+
+			emmc_bus1: emmc-bus1 {
+				rockchip,pins =
+					<1 RK_PA0 2 &pcfg_pull_up_8ma>;
+			};
+
+			emmc_bus4: emmc-bus4 {
+				rockchip,pins =
+					<1 RK_PA0 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA1 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA2 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA3 2 &pcfg_pull_up_8ma>;
+			};
+
+			emmc_bus8: emmc-bus8 {
+				rockchip,pins =
+					<1 RK_PA0 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA1 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA2 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA3 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA4 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA5 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA6 2 &pcfg_pull_up_8ma>,
+					<1 RK_PA7 2 &pcfg_pull_up_8ma>;
+			};
+		};
+
+		flash {
+			flash_cs0: flash-cs0 {
+				rockchip,pins =
+					<1 RK_PB0 1 &pcfg_pull_none>;
+			};
+
+			flash_rdy: flash-rdy {
+				rockchip,pins =
+					<1 RK_PB1 1 &pcfg_pull_none>;
+			};
+
+			flash_dqs: flash-dqs {
+				rockchip,pins =
+					<1 RK_PB2 1 &pcfg_pull_none>;
+			};
+
+			flash_ale: flash-ale {
+				rockchip,pins =
+					<1 RK_PB3 1 &pcfg_pull_none>;
+			};
+
+			flash_cle: flash-cle {
+				rockchip,pins =
+					<1 RK_PB4 1 &pcfg_pull_none>;
+			};
+
+			flash_wrn: flash-wrn {
+				rockchip,pins =
+					<1 RK_PB5 1 &pcfg_pull_none>;
+			};
+
+			flash_csl: flash-csl {
+				rockchip,pins =
+					<1 RK_PB6 1 &pcfg_pull_none>;
+			};
+
+			flash_rdn: flash-rdn {
+				rockchip,pins =
+					<1 RK_PB7 1 &pcfg_pull_none>;
+			};
+
+			flash_bus8: flash-bus8 {
+				rockchip,pins =
+					<1 RK_PA0 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA1 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA2 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA3 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA4 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA5 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA6 1 &pcfg_pull_up_12ma>,
+					<1 RK_PA7 1 &pcfg_pull_up_12ma>;
+			};
+		};
+
+		sfc {
+			sfc_bus4: sfc-bus4 {
+				rockchip,pins =
+					<1 RK_PA0 3 &pcfg_pull_none>,
+					<1 RK_PA1 3 &pcfg_pull_none>,
+					<1 RK_PA2 3 &pcfg_pull_none>,
+					<1 RK_PA3 3 &pcfg_pull_none>;
+			};
+
+			sfc_bus2: sfc-bus2 {
+				rockchip,pins =
+					<1 RK_PA0 3 &pcfg_pull_none>,
+					<1 RK_PA1 3 &pcfg_pull_none>;
+			};
+
+			sfc_cs0: sfc-cs0 {
+				rockchip,pins =
+					<1 RK_PA4 3 &pcfg_pull_none>;
+			};
+
+			sfc_clk: sfc-clk {
+				rockchip,pins =
+					<1 RK_PB1 3 &pcfg_pull_none>;
+			};
+		};
+
+		lcdc {
+			lcdc_rgb_dclk_pin: lcdc-rgb-dclk-pin {
+				rockchip,pins =
+					<3 RK_PA0 1 &pcfg_pull_none_12ma>;
+			};
+
+			lcdc_rgb_m0_hsync_pin: lcdc-rgb-m0-hsync-pin {
+				rockchip,pins =
+					<3 RK_PA1 1 &pcfg_pull_none_12ma>;
+			};
+
+			lcdc_rgb_m0_vsync_pin: lcdc-rgb-m0-vsync-pin {
+				rockchip,pins =
+					<3 RK_PA2 1 &pcfg_pull_none_12ma>;
+			};
+
+			lcdc_rgb_m0_den_pin: lcdc-rgb-m0-den-pin {
+				rockchip,pins =
+					<3 RK_PA3 1 &pcfg_pull_none_12ma>;
+			};
+
+			lcdc_m0_rgb_pins: lcdc-m0-rgb-pins {
+				rockchip,pins =
+					<3 RK_PA0 1 &pcfg_pull_none_8ma>, /* LCDC_DCLK */
+					<3 RK_PA1 1 &pcfg_pull_none_8ma>, /* LCDC_HSYNC */
+					<3 RK_PA2 1 &pcfg_pull_none_8ma>, /* LCDC_VSYNC */
+					<3 RK_PA3 1 &pcfg_pull_none_8ma>, /* LCDC_DEN */
+					<3 RK_PA4 1 &pcfg_pull_none_8ma>, /* LCDC_D0 */
+					<3 RK_PA5 1 &pcfg_pull_none_8ma>, /* LCDC_D1 */
+					<3 RK_PA6 1 &pcfg_pull_none_8ma>, /* LCDC_D2 */
+					<3 RK_PA7 1 &pcfg_pull_none_8ma>, /* LCDC_D3 */
+					<3 RK_PB0 1 &pcfg_pull_none_8ma>, /* LCDC_D4 */
+					<3 RK_PB1 1 &pcfg_pull_none_8ma>, /* LCDC_D5 */
+					<3 RK_PB2 1 &pcfg_pull_none_8ma>, /* LCDC_D6 */
+					<3 RK_PB3 1 &pcfg_pull_none_8ma>, /* LCDC_D7 */
+					<3 RK_PB4 1 &pcfg_pull_none_8ma>, /* LCDC_D8 */
+					<3 RK_PB5 1 &pcfg_pull_none_8ma>, /* LCDC_D9 */
+					<3 RK_PB6 1 &pcfg_pull_none_8ma>, /* LCDC_D10 */
+					<3 RK_PB7 1 &pcfg_pull_none_8ma>, /* LCDC_D11 */
+					<3 RK_PC0 1 &pcfg_pull_none_8ma>, /* LCDC_D12 */
+					<3 RK_PC1 1 &pcfg_pull_none_8ma>, /* LCDC_D13 */
+					<3 RK_PC2 1 &pcfg_pull_none_8ma>, /* LCDC_D14 */
+					<3 RK_PC3 1 &pcfg_pull_none_8ma>, /* LCDC_D15 */
+					<3 RK_PC4 1 &pcfg_pull_none_8ma>, /* LCDC_D16 */
+					<3 RK_PC5 1 &pcfg_pull_none_8ma>, /* LCDC_D17 */
+					<3 RK_PC6 1 &pcfg_pull_none_8ma>, /* LCDC_D18 */
+					<3 RK_PC7 1 &pcfg_pull_none_8ma>, /* LCDC_D19 */
+					<3 RK_PD0 1 &pcfg_pull_none_8ma>, /* LCDC_D20 */
+					<3 RK_PD1 1 &pcfg_pull_none_8ma>, /* LCDC_D21 */
+					<3 RK_PD2 1 &pcfg_pull_none_8ma>, /* LCDC_D22 */
+					<3 RK_PD3 1 &pcfg_pull_none_8ma>; /* LCDC_D23 */
+			};
+
+			lcdc_m0_sleep_pins: lcdc-m0-sleep-pins {
+				rockchip,pins =
+					<3 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_DCLK */
+					<3 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_HSYNC */
+					<3 RK_PA2 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_VSYNC */
+					<3 RK_PA3 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_DEN */
+					<3 RK_PA4 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D0 */
+					<3 RK_PA5 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D1 */
+					<3 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D2 */
+					<3 RK_PA7 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D3 */
+					<3 RK_PB0 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D4 */
+					<3 RK_PB1 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D5 */
+					<3 RK_PB2 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D6 */
+					<3 RK_PB3 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D7 */
+					<3 RK_PB4 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D8 */
+					<3 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D9 */
+					<3 RK_PB6 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D10 */
+					<3 RK_PB7 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D11 */
+					<3 RK_PC0 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D12 */
+					<3 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D13 */
+					<3 RK_PC2 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D14 */
+					<3 RK_PC3 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D15 */
+					<3 RK_PC4 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D16 */
+					<3 RK_PC5 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D17 */
+					<3 RK_PC6 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D18 */
+					<3 RK_PC7 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D19 */
+					<3 RK_PD0 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D20 */
+					<3 RK_PD1 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D21 */
+					<3 RK_PD2 RK_FUNC_GPIO &pcfg_pull_none>, /* LCDC_D22 */
+					<3 RK_PD3 RK_FUNC_GPIO &pcfg_pull_none>; /* LCDC_D23 */
+			};
+		};
+
+		pwm0 {
+			pwm0_pin: pwm0-pin {
+				rockchip,pins =
+					<0 RK_PB7 1 &pcfg_pull_none>;
+			};
+		};
+
+		pwm1 {
+			pwm1_pin: pwm1-pin {
+				rockchip,pins =
+					<0 RK_PC0 1 &pcfg_pull_none>;
+			};
+		};
+
+		pwm2 {
+			pwm2_pin: pwm2-pin {
+				rockchip,pins =
+					<2 RK_PB5 1 &pcfg_pull_none>;
+			};
+		};
+
+		pwm3 {
+			pwm3_pin: pwm3-pin {
+				rockchip,pins =
+					<0 RK_PC1 1 &pcfg_pull_none>;
+			};
+		};
+
+		pwm4 {
+			pwm4_pin: pwm4-pin {
+				rockchip,pins =
+					<3 RK_PC2 3 &pcfg_pull_none>;
+			};
+		};
+
+		pwm5 {
+			pwm5_pin: pwm5-pin {
+				rockchip,pins =
+					<3 RK_PC3 3 &pcfg_pull_none>;
+			};
+		};
+
+		pwm6 {
+			pwm6_pin: pwm6-pin {
+				rockchip,pins =
+					<3 RK_PC4 3 &pcfg_pull_none>;
+			};
+		};
+
+		pwm7 {
+			pwm7_pin: pwm7-pin {
+				rockchip,pins =
+					<3 RK_PC5 3 &pcfg_pull_none>;
+			};
+		};
+
+		gmac {
+			rmii_pins: rmii-pins {
+				rockchip,pins =
+					<2 RK_PA0 2 &pcfg_pull_none_12ma>, /* mac_txen */
+					<2 RK_PA1 2 &pcfg_pull_none_12ma>, /* mac_txd1 */
+					<2 RK_PA2 2 &pcfg_pull_none_12ma>, /* mac_txd0 */
+					<2 RK_PA3 2 &pcfg_pull_none>, /* mac_rxd0 */
+					<2 RK_PA4 2 &pcfg_pull_none>, /* mac_rxd1 */
+					<2 RK_PA5 2 &pcfg_pull_none>, /* mac_rxer */
+					<2 RK_PA6 2 &pcfg_pull_none>, /* mac_rxdv */
+					<2 RK_PA7 2 &pcfg_pull_none>, /* mac_mdio */
+					<2 RK_PB1 2 &pcfg_pull_none>; /* mac_mdc */
+			};
+
+			mac_refclk_12ma: mac-refclk-12ma {
+				rockchip,pins =
+					<2 RK_PB2 2 &pcfg_pull_none_12ma>;
+			};
+
+			mac_refclk: mac-refclk {
+				rockchip,pins =
+					<2 RK_PB2 2 &pcfg_pull_none>;
+			};
+		};
+
+		cif-m0 {
+			cif_clkout_m0: cif-clkout-m0 {
+				rockchip,pins =
+					<2 RK_PB3 1 &pcfg_pull_none>;
+			};
+
+			dvp_d2d9_m0: dvp-d2d9-m0 {
+				rockchip,pins =
+					<2 RK_PA0 1 &pcfg_pull_none>, /* cif_data2 */
+					<2 RK_PA1 1 &pcfg_pull_none>, /* cif_data3 */
+					<2 RK_PA2 1 &pcfg_pull_none>, /* cif_data4 */
+					<2 RK_PA3 1 &pcfg_pull_none>, /* cif_data5 */
+					<2 RK_PA4 1 &pcfg_pull_none>, /* cif_data6 */
+					<2 RK_PA5 1 &pcfg_pull_none>, /* cif_data7 */
+					<2 RK_PA6 1 &pcfg_pull_none>, /* cif_data8 */
+					<2 RK_PA7 1 &pcfg_pull_none>, /* cif_data9 */
+					<2 RK_PB0 1 &pcfg_pull_none>, /* cif_sync */
+					<2 RK_PB1 1 &pcfg_pull_none>, /* cif_href */
+					<2 RK_PB2 1 &pcfg_pull_none>, /* cif_clkin */
+					<2 RK_PB3 1 &pcfg_pull_none>; /* cif_clkout */
+			};
+
+			dvp_d0d1_m0: dvp-d0d1-m0 {
+				rockchip,pins =
+					<2 RK_PB4 1 &pcfg_pull_none>, /* cif_data0 */
+					<2 RK_PB6 1 &pcfg_pull_none>; /* cif_data1 */
+			};
+
+			dvp_d10d11_m0:d10-d11-m0 {
+				rockchip,pins =
+					<2 RK_PB7 1 &pcfg_pull_none>, /* cif_data10 */
+					<2 RK_PC0 1 &pcfg_pull_none>; /* cif_data11 */
+			};
+		};
+
+		cif-m1 {
+			cif_clkout_m1: cif-clkout-m1 {
+				rockchip,pins =
+					<3 RK_PD0 3 &pcfg_pull_none>;
+			};
+
+			dvp_d2d9_m1: dvp-d2d9-m1 {
+				rockchip,pins =
+					<3 RK_PA3 3 &pcfg_pull_none>, /* cif_data2 */
+					<3 RK_PA5 3 &pcfg_pull_none>, /* cif_data3 */
+					<3 RK_PA7 3 &pcfg_pull_none>, /* cif_data4 */
+					<3 RK_PB0 3 &pcfg_pull_none>, /* cif_data5 */
+					<3 RK_PB1 3 &pcfg_pull_none>, /* cif_data6 */
+					<3 RK_PB4 3 &pcfg_pull_none>, /* cif_data7 */
+					<3 RK_PB6 3 &pcfg_pull_none>, /* cif_data8 */
+					<3 RK_PB7 3 &pcfg_pull_none>, /* cif_data9 */
+					<3 RK_PD1 3 &pcfg_pull_none>, /* cif_sync */
+					<3 RK_PD2 3 &pcfg_pull_none>, /* cif_href */
+					<3 RK_PD3 3 &pcfg_pull_none>, /* cif_clkin */
+					<3 RK_PD0 3 &pcfg_pull_none>; /* cif_clkout */
+			};
+
+			dvp_d0d1_m1: dvp-d0d1-m1 {
+				rockchip,pins =
+					<3 RK_PA1 3 &pcfg_pull_none>, /* cif_data0 */
+					<3 RK_PA2 3 &pcfg_pull_none>; /* cif_data1 */
+			};
+
+			dvp_d10d11_m1:d10-d11-m1 {
+				rockchip,pins =
+					<3 RK_PC6 3 &pcfg_pull_none>, /* cif_data10 */
+					<3 RK_PC7 3 &pcfg_pull_none>; /* cif_data11 */
+			};
+		};
+
+		isp {
+			isp_prelight: isp-prelight {
+				rockchip,pins =
+					<3 RK_PD1 4 &pcfg_pull_none>;
+			};
+		};
+	};
+};
diff --git a/arch/arm/mach-rockchip/px30/Kconfig b/arch/arm/mach-rockchip/px30/Kconfig
index 72587c7..baf2e13 100644
--- a/arch/arm/mach-rockchip/px30/Kconfig
+++ b/arch/arm/mach-rockchip/px30/Kconfig
@@ -8,6 +8,12 @@ config TARGET_EVB_PX30
 	  EVB_PX30:
 	  * EVB_PX30 is an evaluation board for Rockchip PX30.
 
+config TARGET_PX30_SECO_D23
+	bool "SECO PX30 D23 Single Board Computer"
+	select BOARD_LATE_INIT
+	help
+	  SECO PX30 D23 is a Single Board Computer for Rockchip PX30.
+
 config TARGET_ODROID_GO2
 	bool "ODROID_GO2"
 
@@ -71,5 +76,6 @@ config DEBUG_UART_CHANNEL
 source "board/engicam/px30_core/Kconfig"
 source "board/hardkernel/odroid_go2/Kconfig"
 source "board/rockchip/evb_px30/Kconfig"
+source "board/seco/px30_d23/Kconfig"
 
 endif
diff --git a/board/seco/px30_d23/Kconfig b/board/seco/px30_d23/Kconfig
new file mode 100644
index 0000000..d4913cc
--- /dev/null
+++ b/board/seco/px30_d23/Kconfig
@@ -0,0 +1,21 @@
+if TARGET_PX30_SECO_D23
+
+config SYS_BOARD
+	default "px30_d23"
+
+config SYS_VENDOR
+	default "seco"
+
+config SYS_CONFIG_NAME
+	default "seco_px30_d23"
+
+config BOARD_SPECIFIC_OPTIONS # dummy
+	def_bool y
+
+config SECO_ENV_AUTOSET
+	bool "Seco environment automatic setting"
+	help
+		This option enables the autocompilation of the environment
+		at each boot (automatic setting of some environment variables)
+
+endif
diff --git a/board/seco/px30_d23/MAINTAINERS b/board/seco/px30_d23/MAINTAINERS
new file mode 100644
index 0000000..f1c8ac7
--- /dev/null
+++ b/board/seco/px30_d23/MAINTAINERS
@@ -0,0 +1,6 @@
+PX30-D23
+M:      Tommaso Merciai - Giuseppe Pagano <tommaso.merciai@seco.com> <giuseppe.pagano@seco.com>
+S:      Maintained
+F:      board/seco/px30_d23
+F:      include/configs/seco_px30_d23.h
+F:      configs/seco_px30_d23_defconfig
diff --git a/board/seco/px30_d23/Makefile b/board/seco/px30_d23/Makefile
new file mode 100644
index 0000000..5b85d66
--- /dev/null
+++ b/board/seco/px30_d23/Makefile
@@ -0,0 +1,8 @@
+#
+# (C) Copyright 2017 Rockchip Electronics Co., Ltd
+#
+# SPDX-License-Identifier:     GPL-2.0+
+#
+
+obj-y	+= px30_d23.o
+obj-$(CONFIG_SECO_ENV_AUTOSET) += env_autoset.o
diff --git a/board/seco/px30_d23/env_conf.h b/board/seco/px30_d23/env_conf.h
new file mode 100644
index 0000000..f53d8b3
--- /dev/null
+++ b/board/seco/px30_d23/env_conf.h
@@ -0,0 +1,143 @@
+#include <common.h>
+
+//#include <seco/env_common.h>
+
+#define BOOT_DEV_ID_EMMC      __stringify(BOOT_ID_EMMC)"\0"
+#define BOOT_DEV_ID_U_SD      __stringify(BOOT_ID_USD)"\0"
+#define BOOT_DEV_ID_EXT_SD    __stringify(BOOT_ID_EXT_SD)"\0"
+#define BOOT_DEV_ID_SPI       "0"
+#define BOOT_DEV_ID_SATA      "0"
+#define BOOT_DEV_ID_USB       "0"
+
+#define ROOT_DEV_ID_EMMC      __stringify(ROOT_ID_EMMC)"\0"
+#define ROOT_DEV_ID_U_SD      __stringify(ROOT_ID_USD)"\0"
+
+
+#define LOAD_ADDR_KERNEL_LOCAL_DEV    __stringify(ENV_KERNEL_LOADADDR)"\0"
+#define LOAD_ADDR_KERNEL_REMOTE_DEV   __stringify(ENV_KERNEL_LOADADDR)"\0"
+
+#define LOAD_ADDR_FDT_LOCAL_DEV       __stringify(ENV_FDT_LOADADDR)"\0"
+#define LOAD_ADDR_FDT_REMOTE_DEV      __stringify(ENV_FDT_LOADADDR)"\0"
+
+#define LOAD_ADDR_RAMFS_LOCAL_DEV       __stringify(ENV_RAMFS_LOADADDR)"\0"
+#define LOAD_ADDR_RAMFS_REMOTE_DEV      __stringify(ENV_RAMFS_LOADADDR)"\0"
+
+#define LOAD_ADDR_FDT_OVERLAY_LOCAL_DEV       __stringify(ENV_FDT_OVERLAY_LOADADDR)"\0"
+#define LOAD_ADDR_FDT_OVERLAY_REMOTE_DEV      __stringify(ENV_FDT_OVERLAY_LOADADDR)"\0"
+
+#define __STR(X) #X
+#define STR(X) __STR(X)
+
+
+data_boot_dev_t kern_dev_list [] = {
+        { DEV_EMMC,     "eMMC onboard",   STR(MACRO_ENV_KERNEL_SRC_USDHCI),    BOOT_DEV_ID_EMMC,    LOAD_ADDR_KERNEL_LOCAL_DEV,   "Image" },
+        { DEV_U_SD,     "uSD onboard",    STR(MACRO_ENV_KERNEL_SRC_USDHCI),    BOOT_DEV_ID_U_SD,    LOAD_ADDR_KERNEL_LOCAL_DEV,   "Image" },
+        { DEV_TFTP,     "TFTP",           STR(MACRO_ENV_KERNEL_SRC_TFTP),      "",                  LOAD_ADDR_KERNEL_REMOTE_DEV,  "Image" },
+        { DEV_USB,      "USB",            STR(MACRO_ENV_KERNEL_SRC_USB),       BOOT_DEV_ID_USB,     LOAD_ADDR_KERNEL_LOCAL_DEV,   "Image" },
+};
+
+size_t kern_dev_size = sizeof( kern_dev_list ) / sizeof( kern_dev_list[0] );
+
+
+data_boot_dev_t fdt_dev_list [] = {
+        { DEV_EMMC,     "eMMC onboard",   STR(MACRO_ENV_FDT_SRC_USDHCI),     BOOT_DEV_ID_EMMC,    LOAD_ADDR_FDT_LOCAL_DEV,   CONFIG_DEFAULT_FDT_FILE },
+        { DEV_U_SD,     "uSD onboard",    STR(MACRO_ENV_FDT_SRC_USDHCI),     BOOT_DEV_ID_U_SD,    LOAD_ADDR_FDT_LOCAL_DEV,   CONFIG_DEFAULT_FDT_FILE },
+        { DEV_TFTP,     "TFTP",           STR(MACRO_ENV_FDT_SRC_TFTP),       "",                  LOAD_ADDR_FDT_REMOTE_DEV,  CONFIG_DEFAULT_FDT_FILE },
+        { DEV_USB,      "USB",            STR(MACRO_ENV_FDT_SRC_USB),        BOOT_DEV_ID_USB,     LOAD_ADDR_FDT_LOCAL_DEV,   CONFIG_DEFAULT_FDT_FILE },
+};
+
+size_t fdt_dev_size = sizeof( fdt_dev_list ) / sizeof( fdt_dev_list[0] );
+
+
+#ifdef CONFIG_OF_LIBFDT_OVERLAY
+data_boot_dev_t fdt_overlay_dev_list [] = {
+        { DEV_EMMC,     "eMMC onboard",   STR(MACRO_ENV_FDT_OVERLAY_SRC_USDHCI),  BOOT_DEV_ID_EMMC,    LOAD_ADDR_FDT_OVERLAY_LOCAL_DEV,   DEFAULT_OVERLAY_FILE },
+        { DEV_U_SD,     "uSD onboard",    STR(MACRO_ENV_FDT_OVERLAY_SRC_USDHCI),  BOOT_DEV_ID_U_SD,    LOAD_ADDR_FDT_OVERLAY_LOCAL_DEV,   DEFAULT_OVERLAY_FILE },
+        { DEV_TFTP,     "TFTP",           STR(MACRO_ENV_FDT_OVERLAY_SRC_TFTP),    "",                  LOAD_ADDR_FDT_OVERLAY_REMOTE_DEV,  DEFAULT_OVERLAY_FILE },
+        { DEV_USB,      "USB",            STR(MACRO_ENV_FDT_OVERLAY_SRC_USB),     BOOT_DEV_ID_USB,     LOAD_ADDR_FDT_OVERLAY_LOCAL_DEV,   DEFAULT_OVERLAY_FILE },
+};
+
+size_t fdt_overlay_dev_size = sizeof( fdt_overlay_dev_list ) / sizeof( fdt_overlay_dev_list[0] );
+#endif
+
+
+data_boot_dev_t ramfs_dev_list [] = {
+        { DEV_NONE,     "Not use",        "0x0",                              "0",                 "",                          ""},
+        { DEV_EMMC,     "eMMC onboard",   STR(MACRO_ENV_RAMFS_SRC_USDHCI),    BOOT_DEV_ID_EMMC,    LOAD_ADDR_RAMFS_LOCAL_DEV,   "ramfs.img" },
+        { DEV_U_SD,     "uSD onboard",    STR(MACRO_ENV_RAMFS_SRC_USDHCI),    BOOT_DEV_ID_U_SD,    LOAD_ADDR_RAMFS_LOCAL_DEV,   "ramfs.img" },
+        { DEV_TFTP,     "TFTP",           STR(MACRO_ENV_RAMFS_SRC_TFTP),      "",                  LOAD_ADDR_RAMFS_REMOTE_DEV,  "ramfs.img" },
+        { DEV_USB,      "USB",            STR(MACRO_ENV_RAMFS_SRC_USB),       BOOT_DEV_ID_USB,     LOAD_ADDR_RAMFS_LOCAL_DEV,   "ramfs.img" },
+};
+
+size_t ramfs_dev_size = sizeof( ramfs_dev_list ) / sizeof( ramfs_dev_list[0] );
+
+
+data_boot_dev_t filesystem_dev_list [] = {
+        { DEV_EMMC,     "eMMC onboard",   STR(MACRO_ENV_FS_SRC_USDHCI),     ROOT_DEV_ID_EMMC,    "" },
+        { DEV_U_SD,     "uSD onboard",    STR(MACRO_ENV_FS_SRC_USDHCI),     ROOT_DEV_ID_U_SD,    "" },
+        { DEV_NFS,      "NFS",            STR(MACRO_ENV_FS_SRC_NFS),        "",                  "" },
+        { DEV_USB,      "USB",            STR(MACRO_ENV_FS_SRC_USB),        "",                  "" },
+};
+
+size_t filesystem_dev_size = sizeof( filesystem_dev_list ) / sizeof( filesystem_dev_list[0] );
+
+video_mode_t video_mode_list [] = {
+        {
+                .label    = "no display",
+                .video = {
+                        { VIDEO_NOT_USED, VIDEO_LVDS, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_HDMI, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_EDP, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_TYPEC, NO_VIDEO_ARGS },
+                },
+                .panel_name = "none",
+                .dtbo_conf_file = NULL,
+                .use_bootargs = 0,
+        }, {
+                .label    = "LVDS 1280x800",
+                .video = {
+                        { VIDEO_USED, VIDEO_LVDS, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_HDMI, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_EDP, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_TYPEC, NO_VIDEO_ARGS },
+                },
+                .panel_name = "none",
+                .dtbo_conf_file = "seco-px30-d23-lvds1280x800.dtbo",
+                .use_bootargs = 0,
+        }, {
+                .label    = "LVDS 800x480",
+                .video = {
+                        { VIDEO_USED, VIDEO_LVDS, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_HDMI, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_EDP, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_TYPEC, NO_VIDEO_ARGS },
+                },
+                .panel_name = "none",
+                .dtbo_conf_file = "seco-px30-d23-lvds800x480.dtbo",
+                .use_bootargs = 0,
+        }, {
+                .label    = "HDMI",
+                .video = {
+                        { VIDEO_NOT_USED, VIDEO_LVDS, NO_VIDEO_ARGS },
+                        { VIDEO_USED, VIDEO_HDMI, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_EDP, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_TYPEC, NO_VIDEO_ARGS },
+                },
+                .panel_name = "none",
+                .dtbo_conf_file = "seco-px30-d23-hdmi.dtbo",
+                .use_bootargs = 0,
+        }, {
+                .label    = "LVDS+HDMI",
+                .video = {
+                        { VIDEO_USED, VIDEO_LVDS, NO_VIDEO_ARGS },
+                        { VIDEO_USED, VIDEO_HDMI, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_EDP, NO_VIDEO_ARGS },
+                        { VIDEO_NOT_USED, VIDEO_TYPEC, NO_VIDEO_ARGS },
+                },
+                .panel_name = "none",
+                .dtbo_conf_file = "seco-px30-d23-lvds-hdmi.dtbo",
+                .use_bootargs = 0,
+        },
+};
+
+size_t video_mode_size = sizeof( video_mode_list ) / sizeof( video_mode_list[0] );
diff --git a/board/seco/px30_d23/seco_proto.h b/board/seco/px30_d23/seco_proto.h
new file mode 100644
index 0000000..ca7fc02
--- /dev/null
+++ b/board/seco/common/seco_proto.h
@@ -0,0 +1,8 @@
+
+
+#ifdef CONFIG_SECO_ENV_AUTOSET
+
+extern void autoset_boot_device(void);
+extern int get_macaddress_from_eeprom(struct udevice *i2c_bus, int i2c_addr, u8 *mac_addr);
+
+#endif
diff --git a/board/seco/px30_d23/env_autoset.c b/board/seco/px30_d23/env_autoset.c
new file mode 100644
index 0000000..ca1c912
--- /dev/null
+++ b/board/seco/common/env_autoset.c
@@ -0,0 +1,80 @@
+#include <common.h>
+#include <asm/arch-rockchip/sys_proto.h>
+#include <linux/errno.h>
+#include <asm/io.h>
+#include <stdbool.h>
+#include <mmc.h>
+#include <i2c.h>
+#include <dm/uclass-internal.h>
+
+
+static int check_mmc_autodetect(void)
+{
+	char *autodetect_str = env_get("mmcautodetect");
+
+	if ((autodetect_str != NULL) &&
+		(strcmp(autodetect_str, "yes") == 0)) {
+		return 1;
+	}
+
+	return 0;
+}
+
+/* This should be defined for each board */
+__weak int mmc_map_to_kernel_blk(int dev_no)
+{
+	return dev_no;
+}
+
+void autoset_boot_device(void)
+{
+	char cmd[32];
+	char mmcblk[32];
+	u32 dev_no = mmc_get_env_dev();
+
+	if (!check_mmc_autodetect())
+		return;
+
+	env_set_ulong("mmcdev", dev_no);
+
+	env_set_ulong ("root_device_id", dev_no);
+	env_set_ulong ("kernel_device_id", dev_no);
+	env_set_ulong ("bootscript_device_id", dev_no);
+	env_set_ulong ("fdt_device_id", dev_no);
+	env_set_ulong ("ramfs_device_id", dev_no);
+
+	/* Set mmcblk env */
+	sprintf(mmcblk, "/dev/mmcblk%dp2 rootwait rw",
+		mmc_map_to_kernel_blk(dev_no));
+	env_set("mmcroot", mmcblk);
+
+	sprintf(cmd, "mmc dev %d", dev_no);
+	run_command(cmd, 0);
+
+}
+
+int get_macaddress_from_eeprom(struct udevice *i2c_bus, int i2c_addr, u8 *mac_addr)
+{
+
+	struct udevice *i2c_eeprom;
+	int ret;
+
+	ret = dm_i2c_probe(i2c_bus, i2c_addr, 0, &i2c_eeprom);
+	if (ret) {
+		printf("Failed to connect to EEPROM 0x%03x\n", i2c_addr);
+		return -1;
+	}
+
+	ret = dm_i2c_read(i2c_eeprom, 0x00, mac_addr, 6);
+	if (ret) {
+		printf("Failed to connect to EEPROM 0x%03x\n", i2c_addr);
+		return -1;
+	}
+
+	/* Only get MAC address, if eeprom is well programmed */
+	if ((mac_addr[0] & mac_addr[1] & mac_addr[2] & mac_addr[3] & mac_addr[4] & mac_addr[5]) == 0xFF ||
+                      (mac_addr[0] | mac_addr[1] | mac_addr[2] | mac_addr[3] | mac_addr[4] | mac_addr[5]) == 0x00 )
+		return -1;
+
+	return 0;
+}
diff --git a/board/seco/px30_d23/px30_d23.c b/board/seco/px30_d23/px30_d23.c
new file mode 100644
index 0000000000..1969ac8bba
--- /dev/null
+++ b/board/seco/px30_d23/px30_d23.c
@@ -0,0 +1,423 @@
+/*
+ * (C) Copyright 2017 Rockchip Electronics Co., Ltd
+ * Copyright 2022 Seco
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#include <common.h>
+#include <dm.h>
+#include <asm/io.h>
+#include <asm/gpio.h>
+#include <stdlib.h>
+#include <linux/delay.h>
+
+#include <env.h>
+#include <i2c.h>
+#include <usb.h>
+#include <dm/uclass-internal.h>
+
+#include "seco_proto.h"
+#if 0
+#ifdef CONFIG_SECO_ENV_MANEGER
+	#include <seco/env_common.h>
+#endif
+#include "env_conf.h"
+#endif
+DECLARE_GLOBAL_DATA_PTR;
+
+#define USB_TOUCH_VENDOR_ID      0x222a
+#define USB_TOUCH_PRODUCT_ID     0x0001
+
+#define I2C_BUS1                 1
+#define I2C_SPEED                400000
+
+#define I2C_TOUCH_LVDS_ADDR      92
+#define I2C_IO_EXP_A             0x20
+#define I2C_EEPROM_REVB          0x51
+#define I2C_EEPROM_REVC          0x52
+#define I2C_EEPROM_REVC1         0x53
+
+#define I2C_IO_EXPANDER_REG_2    0x2
+#define I2C_IO_EXPANDER_REG_3    0x3
+#define I2C_IO_EXPANDER_REG_6    0x6
+#define I2C_IO_EXPANDER_REG_7    0x7
+
+#define RevA                     0x0
+#define RevB                     0x1
+#define RevC                     0x2
+#define RevC1                    0x3
+
+#ifndef CONFIG_SPL_BUILD
+bool is_usb_device_present(unsigned long vendor, unsigned long product);
+static bool is_device_present(struct usb_device *udev, unsigned long vendor, unsigned long product);
+/**************************************
+*  Board code:
+*     0xKYZZ
+*        |||
+*        |ZZ => 00 = RevA;
+*        |      01 = RevB;
+*        |      02 = RevC;
+*        |      03 = RevC1;
+*        |
+*        Y => 0 = HDMI;
+*             1 = LVDS;
+**************************************/
+
+static int board_code(void) {
+	int eeprom_addr, chip_is_present;
+	int rev_code = 0;
+	int cnt = 0;
+	int board_code = 0x0;
+	int display_code = 0x0;
+	struct udevice *i2c_bus, *i2c_chip;
+
+	uclass_get_device_by_name(UCLASS_I2C, "i2c@ff190000", &i2c_bus);
+	dm_i2c_set_bus_speed(i2c_bus, I2C_SPEED);
+	for (eeprom_addr = 0x50; eeprom_addr < 0x58; eeprom_addr++) {
+		chip_is_present = dm_i2c_probe(i2c_bus, eeprom_addr, 0, &i2c_chip);
+		if (!chip_is_present)
+			rev_code = cnt;
+		cnt++;
+	}
+	chip_is_present = dm_i2c_probe(i2c_bus, I2C_TOUCH_LVDS_ADDR, 0, &i2c_chip);
+	if (!chip_is_present)
+		display_code = 0x1;
+
+	board_code = rev_code | (display_code << 8);
+
+	return board_code;
+}
+
+static void setup_seco_environment(void)
+{
+#ifdef CONFIG_SECO_ENV_MANEGER
+	gd->bsp_sources.kern_dev_list        = &kern_dev_list[0];
+	gd->bsp_sources.kern_dev_num         = kern_dev_size;
+	gd->bsp_sources.fdt_dev_list         = &fdt_dev_list[0];
+	gd->bsp_sources.fdt_dev_num          = fdt_dev_size;
+#ifdef CONFIG_OF_LIBFDT_OVERLAY
+	gd->bsp_sources.fdt_overlay_dev_list     = fdt_overlay_dev_list;
+	gd->bsp_sources.fdt_overlay_dev_num      = fdt_overlay_dev_size;
+#endif
+	gd->bsp_sources.ramfs_dev_list       = &ramfs_dev_list[0];
+	gd->bsp_sources.ramfs_dev_num        = ramfs_dev_size;
+	gd->bsp_sources.filesystem_dev_list  = &filesystem_dev_list[0];
+	gd->bsp_sources.filesystem_dev_num   = filesystem_dev_size;
+
+	gd->boot_setup.video_mode_list           = video_mode_list;
+	gd->boot_setup.video_mode_num            = video_mode_size;
+#endif
+}
+
+#if 0
+int mmc_get_boot_dev(void) {
+	int ret;
+	char *devtype = NULL, *devnum = NULL;
+	ret = param_parse_bootdev(&devtype, &devnum);
+	if (!ret) {
+        	return atoi(devnum);
+	} else {
+		return 0;
+	}
+}
+#endif
+#endif
+
+#ifdef CONFIG_SERIAL_TAG
+void get_board_serial(void)
+{
+	return;
+}
+#endif
+
+static int setup_macaddr(void)
+{
+#if CONFIG_IS_ENABLED(CMD_NET)
+	struct udevice *i2c_bus, *i2c_eeprom;
+	int ret, i;
+	u8 mac_addr[6];
+	u32 addr_list[] = {
+		I2C_EEPROM_REVB,
+		I2C_EEPROM_REVC,
+		I2C_EEPROM_REVC1,
+	};
+
+	ret = uclass_get_device_by_name(UCLASS_I2C, "i2c@ff190000", &i2c_bus);
+	if (ret) {
+		printf("Could not get I2C bus! err= %d\n", ret);
+		return ret;
+	}
+
+	for (i = 0; i < ARRAY_SIZE(addr_list); i++) {
+		ret = dm_i2c_probe(i2c_bus, addr_list[i], 0, &i2c_eeprom);
+		if (!ret)
+			break;
+	}
+
+	if (ret) {
+		printf("Failed to connect to I2C_EEPROM!\n");
+		return ret;
+	}
+
+	ret = dm_i2c_read(i2c_eeprom, 0x00, mac_addr, 6);
+
+	/* Only set a MAC address, if eeprom is well programmed */
+	if ((mac_addr[0] & mac_addr[1] & mac_addr[2] & mac_addr[3] & mac_addr[4] & mac_addr[5]) == 0xFF ||
+                      (mac_addr[0] | mac_addr[1] | mac_addr[2] | mac_addr[3] | mac_addr[4] | mac_addr[5]) == 0x00 )
+		return -1;
+
+	eth_env_set_enetaddr("ethaddr", mac_addr);
+#endif
+
+	return 0;
+}
+
+int misc_init_r(void)
+{
+	get_board_serial();
+#ifndef CONFIG_SPL_BUILD
+#ifdef CONFIG_SECO_ENV_AUTOSET
+	autoset_boot_device();
+#endif
+	setup_seco_environment();
+	setup_macaddr();
+#endif
+    return 0;
+}
+
+#ifndef CONFIG_SPL_BUILD
+void set_board_environment(void)
+{
+	int boardcode = board_code();
+	char *board_part = "px30-d23";
+	char rev_part[8];
+	char video_part[8];
+	char custom_dts_str[64];
+
+	switch (boardcode & 0xFF) {
+		case RevA:
+			printf("RevA\n");
+			env_set("rev_part", "-reva");
+			sprintf(rev_part, "reva");
+			break;
+		case RevB:
+			printf("RevB\n");
+			env_set("rev_part", "-revb");
+			sprintf(rev_part, "revb");
+			break;
+		case RevC:
+			printf("RevC\n");
+			env_set("rev_part", "-revc");
+			sprintf(rev_part, "revc");
+			break;
+		case RevC1:
+			printf("RevC1\n");
+			env_set("rev_part", "-revc1");
+			sprintf(rev_part, "revc1");
+			break;
+		default:
+			printf("Revision N.A.\n");
+			break;
+	}
+
+	if (is_usb_device_present(USB_TOUCH_VENDOR_ID, USB_TOUCH_PRODUCT_ID)) {
+		env_set("video_part", "-lvds");
+		sprintf(video_part, "lvds");
+	} else {
+		env_set("video_part", "-hdmi");
+		sprintf(video_part, "hdmi");
+	}
+
+	printf("Using dtb file = seco-%s-%s.dtb\n", board_part, rev_part);
+	sprintf(custom_dts_str, "seco-%s-%s.dtb", board_part, rev_part);
+	env_set("custom_fdt_file", custom_dts_str);
+	env_set("fdt_file", custom_dts_str);
+
+	setup_seco_environment();
+
+	return;
+}
+
+void ioexpander_init(void)
+{
+	int boardrev = board_code() & 0xFF;
+	if (boardrev == RevB) {
+		struct gpio_desc gpio1_8, gpio1_11;
+		struct udevice *gpio_dev1 = NULL;
+
+		printf("IO Expander Setup.\n");
+		uclass_get_device_by_name(UCLASS_GPIO, "gpio1@ff250000", &gpio_dev1);
+		gpio1_8.dev = gpio_dev1;
+		gpio1_8.offset = 8;
+		gpio1_8.flags = 0;
+		gpio1_11.dev = gpio_dev1;
+		gpio1_11.offset = 11;
+		gpio1_11.flags = 0;
+		dm_gpio_request(&gpio1_8, "io_expanderA_reset");
+		dm_gpio_request(&gpio1_11, "io_expanderB_reset");
+		dm_gpio_set_dir_flags(&gpio1_8, GPIOD_IS_OUT);
+		dm_gpio_set_dir_flags(&gpio1_11, GPIOD_IS_OUT);
+		udelay(100);
+		dm_gpio_set_value(&gpio1_8, 1);
+		dm_gpio_set_value(&gpio1_11, 1);
+	} else {
+		struct gpio_desc gpio1_8, gpio0_14;
+		struct udevice *gpio_dev0 = NULL;
+		struct udevice *gpio_dev1 = NULL;
+
+		printf("IO Expander Setup iiii.\n");
+		uclass_get_device_by_name(UCLASS_GPIO, "gpio0@ff040000" , &gpio_dev0);
+		uclass_get_device_by_name(UCLASS_GPIO, "gpio1@ff250000", &gpio_dev1);
+		gpio1_8.dev = gpio_dev1;
+		gpio1_8.offset = 8;
+		gpio1_8.flags = 0;
+		gpio0_14.dev = gpio_dev0;
+		gpio0_14.offset = 14;
+		gpio0_14.flags = 0;
+		dm_gpio_request(&gpio1_8, "io_expanderA_reset");
+		dm_gpio_request(&gpio0_14, "io_expanderB_reset");
+		dm_gpio_set_dir_flags(&gpio1_8, GPIOD_IS_OUT);
+		dm_gpio_set_dir_flags(&gpio0_14, GPIOD_IS_OUT);
+		udelay(100);
+		dm_gpio_set_value(&gpio1_8, 1);
+		dm_gpio_set_value(&gpio0_14, 1);
+		udelay(100);
+	}
+}
+
+int d23_usb_init(void)
+{
+	struct udevice *i2c_bus, *i2c_exp_a;
+	int ret;
+	u8 buf[2];
+	uclass_get_device_by_name(UCLASS_I2C, "i2c@ff190000", &i2c_bus);
+	ret = dm_i2c_probe(i2c_bus, I2C_IO_EXP_A, 0, &i2c_exp_a);
+	if (ret) {
+		printf("Failed to connect to IO EXPANDER A\n");
+		return -ENODEV;
+	}
+
+	buf[0] = 0xC3;
+	ret = dm_i2c_write(i2c_exp_a, I2C_IO_EXPANDER_REG_2, buf, 1);
+	ret = dm_i2c_write(i2c_exp_a, I2C_IO_EXPANDER_REG_6, buf, 1);
+
+	buf[0] = 0xFB;
+	ret = dm_i2c_write(i2c_exp_a, I2C_IO_EXPANDER_REG_3, buf, 1);
+	ret = dm_i2c_write(i2c_exp_a, I2C_IO_EXPANDER_REG_7, buf, 1);
+
+	printf("IO EXPANDER A initialization done. [%d]\n", ret);
+	return ret;
+}
+
+static bool is_mass_storage_present(struct usb_device *udev)
+{
+	struct udevice *child;
+
+	if (udev->descriptor.bDeviceClass == 0)
+	if (udev->config.if_desc[0].desc.bInterfaceClass == USB_CLASS_MASS_STORAGE)
+		return true;
+
+	for (device_find_first_child(udev->dev, &child);
+	    child;
+	    device_find_next_child(&child)) {
+		if (device_active(child) &&
+		    (device_get_uclass_id(child) != UCLASS_USB_EMUL) &&
+		    (device_get_uclass_id(child) != UCLASS_BLK)) {
+			udev = dev_get_parent_priv(child);
+			if (is_mass_storage_present(udev))
+				return true;
+		}
+	}
+	return false;
+}
+
+bool is_usb_mass_storage_present(void)
+{
+	struct udevice *bus;
+
+	for (uclass_find_first_device(UCLASS_USB, &bus);
+	    bus;
+	    uclass_find_next_device(&bus)) {
+		struct usb_device *udev;
+		struct udevice *dev;
+
+		if (!device_active(bus))
+			continue;
+
+		device_find_first_child(bus, &dev);
+		if (dev && device_active(dev)) {
+			udev = dev_get_parent_priv(dev);
+			if (is_mass_storage_present(udev))
+				return true;
+		}
+	}
+	return false;
+}
+
+static bool is_device_present(struct usb_device *udev, unsigned long vendor, unsigned long product)
+{
+	struct udevice *child;
+
+	if (udev->descriptor.bDeviceClass == 0)
+		if ((udev->descriptor.idVendor == vendor) &&
+		(udev->descriptor.idProduct == product))
+			return true;
+
+	for (device_find_first_child(udev->dev, &child);
+	    child;
+	    device_find_next_child(&child)) {
+		if (device_active(child) &&
+		    (device_get_uclass_id(child) != UCLASS_USB_EMUL) &&
+		    (device_get_uclass_id(child) != UCLASS_BLK)) {
+			udev = dev_get_parent_priv(child);
+			if (is_device_present(udev, vendor, product))
+			return true;
+		}
+	}
+	return false;
+}
+
+bool is_usb_device_present(unsigned long vendor, unsigned long product)
+{
+	struct udevice *bus;
+
+	for (uclass_find_first_device(UCLASS_USB, &bus);
+	    bus;
+	    uclass_find_next_device(&bus)) {
+		struct usb_device *udev;
+		struct udevice *dev;
+
+		if (!device_active(bus))
+			continue;
+
+		device_find_first_child(bus, &dev);
+		if (dev && device_active(dev)) {
+			udev = dev_get_parent_priv(dev);
+			if (is_device_present(udev, vendor, product))
+				return true;
+		}
+	}
+	return false;
+}
+
+int rk_board_late_init(void)
+{
+	ioexpander_init();
+	d23_usb_init();
+	usb_init();
+	set_board_environment();
+	if (is_usb_mass_storage_present())
+		env_set("bootusb", "true");
+	return 0;
+}
+
+#if defined(CONFIG_ENV_IS_IN_MMC)
+int mmc_get_env_dev(void) {
+#ifdef CONFIG_SYS_MMC_ENV_DEV
+	return CONFIG_SYS_MMC_ENV_DEV;
+#else
+	return 0;
+#endif
+}
+#endif
+#endif
diff --git a/configs/seco_px30_d23_defconfig b/configs/seco_px30_d23_defconfig
new file mode 100644
index 0000000..2de8a60
--- /dev/null
+++ b/configs/seco_px30_d23_defconfig
@@ -0,0 +1,177 @@
+CONFIG_ARM=y
+CONFIG_ARCH_ROCKCHIP=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_ROCKCHIP_PX30=y
+CONFIG_SPL_FIT_GENERATOR="arch/arm/mach-rockchip/make_fit_atf.py"
+CONFIG_ROCKCHIP_SPL_RESERVE_IRAM=0x0
+CONFIG_SPL_ROCKCHIP_COMMON_BOARD=y
+CONFIG_SPL_BOARD_INIT=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_ENV_OFFSET=0xc00000
+CONFIG_RKIMG_BOOTLOADER=y
+CONFIG_TARGET_PX30_SECO_D23=y
+CONFIG_TPL_LIBCOMMON_SUPPORT=y
+CONFIG_TPL_LIBGENERIC_SUPPORT=y
+CONFIG_TPL_SYS_MALLOC_SIMPLE=y
+CONFIG_TPL_DRIVERS_MISC=y
+CONFIG_TPL_OF_CONTROL=y
+CONFIG_TPL_DM=y
+CONFIG_TPL_REGMAP=y
+CONFIG_TPL_SYSCON=y
+CONFIG_TPL_CLK=y
+#CONFIG_TPL_ROCKCHIP_COMMON_BOARD is not set
+CONFIG_SPL_DRIVERS_MISC=y
+CONFIG_SPL_STACK_R_ADDR=0x600000
+CONFIG_SYS_LOAD_ADDR=0x00800800
+# CONFIG_ANDROID_BOOT_IMAGE is not set
+CONFIG_SYS_TEXT_BASE=0x00200000
+CONFIG_DEFAULT_DEVICE_TREE="seco-px30-d23"
+CONFIG_DEBUG_UART=y
+CONFIG_TPL_SYS_MALLOC_F_LEN=0x600
+CONFIG_FIT=y
+CONFIG_FIT_VERBOSE=y
+CONFIG_SPL_LOAD_FIT=y
+CONFIG_DISPLAY_BOARDINFO_LATE=y
+CONFIG_MISC_INIT_R=y
+CONFIG_SPL_BOOTROM_SUPPORT=y
+CONFIG_BOOTDELAY=5
+CONFIG_SYS_CONSOLE_INFO_QUIET=y
+CONFIG_PRE_CONSOLE_BUFFER=Y
+CONFIG_CMD_SAVEENV=y
+CONFIG_ENV_IS_IN_MMC=y
+# CONFIG_DISPLAY_CPUINFO is not set
+CONFIG_SPL_STACK_R=y
+CONFIG_SPL_ATF=y
+# CONFIG_TPL_FRAMEWORK is not set
+CONFIG_SPL_ATF_NO_PLATFORM_PARAM=y
+CONFIG_FASTBOOT_BUF_ADDR=0x800800
+CONFIG_FASTBOOT_BUF_SIZE=0x04000000
+CONFIG_FASTBOOT_FLASH=y
+CONFIG_FASTBOOT_FLASH_MMC_DEV=1
+# CONFIG_CMD_ELF is not set
+# CONFIG_CMD_IMI is not set
+# CONFIG_CMD_IMLS is not set
+# CONFIG_CMD_XIMG is not set
+# CONFIG_CMD_LZMADEC is not set
+# CONFIG_CMD_UNZIP is not set
+# CONFIG_CMD_FLASH is not set
+# CONFIG_CMD_FPGA is not set
+CONFIG_CMD_GPT=y
+# CONFIG_CMD_LOADB is not set
+# CONFIG_CMD_LOADS is not set
+CONFIG_CMD_BOOT_ROCKCHIP=y
+CONFIG_CMD_CLK=y
+CONFIG_CMD_MMC=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_GPIO=y
+CONFIG_CMD_USB_MASS_STORAGE=y
+# CONFIG_CMD_ITEST is not set
+# CONFIG_CMD_SETEXPR is not set
+# CONFIG_CMD_MISC is not set
+# CONFIG_SPL_DOS_PARTITION is not set
+# CONFIG_ISO_PARTITION is not set
+CONFIG_EFI_PARTITION_ENTRIES_NUMBERS=64
+CONFIG_RKPARM_PARTITION=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_OF_LIVE=y
+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
+CONFIG_REGMAP=y
+CONFIG_SPL_REGMAP=y
+CONFIG_SYSCON=y
+CONFIG_SPL_SYSCON=y
+CONFIG_CLK=y
+CONFIG_SPL_CLK=y
+CONFIG_ROCKCHIP_GPIO=y
+CONFIG_DM_PCA953X=y
+CONFIG_SYS_I2C_ROCKCHIP=y
+CONFIG_SPL_I2C=y
+CONFIG_MISC=y
+CONFIG_ROCKCHIP_OTP=y
+CONFIG_DM_I2C=y
+CONFIG_CMD_I2C=y
+CONFIG_I2C_EEPROM=y
+CONFIG_DM_KEY=y
+CONFIG_RK8XX_PWRKEY=y
+CONFIG_ADC_KEY=y
+CONFIG_MMC_DW=y
+CONFIG_MMC_DW_ROCKCHIP=y
+CONFIG_PHY=y
+CONFIG_PHY_ROCKCHIP_INNO_USB2=y
+CONFIG_PINCTRL=y
+CONFIG_DM_FUEL_GAUGE=y
+CONFIG_DM_PMIC=y
+CONFIG_PMIC_RK8XX=y
+CONFIG_REGULATOR_PWM=y
+CONFIG_ETH_DESIGNWARE=y
+CONFIG_GMAC_ROCKCHIP=y
+CONFIG_PHY_TI=y
+CONFIG_DM_ETH=y
+CONFIG_DM_REGULATOR_FIXED=y
+CONFIG_REGULATOR_RK8XX=y
+CONFIG_DM_DVFS=y
+CONFIG_ROCKCHIP_WTEMP_DVFS=y
+CONFIG_DM_CHARGE_DISPLAY=y
+CONFIG_CHARGE_ANIMATION=y
+CONFIG_PWM_ROCKCHIP=y
+CONFIG_RAM=y
+CONFIG_SPL_RAM=y
+CONFIG_TPL_RAM=y
+CONFIG_ROCKCHIP_SDRAM_COMMON=y
+CONFIG_DM_RESET=y
+CONFIG_DM_RNG=y
+CONFIG_RNG_ROCKCHIP=y
+CONFIG_RKNAND=y
+CONFIG_BAUDRATE=115200
+CONFIG_DEBUG_UART_BASE=0xFF160000
+CONFIG_DEBUG_UART_CLOCK=24000000
+CONFIG_DEBUG_UART_SHIFT=2
+CONFIG_DEBUG_UART_SKIP_INIT=y
+CONFIG_SOUND=y
+CONFIG_I2S_ROCKCHIP=y
+CONFIG_SOUND_RK817=y
+CONFIG_SOUND_ROCKCHIP=y
+CONFIG_SYSRESET=y
+CONFIG_DM_THERMAL=y
+CONFIG_ROCKCHIP_THERMAL=y
+CONFIG_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_EHCI_GENERIC=y
+CONFIG_USB_OHCI_HCD=y
+CONFIG_USB_OHCI_GENERIC=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_DWC2_OTG=y
+CONFIG_USB_GADGET_DOWNLOAD=y
+CONFIG_USB_GADGET_MANUFACTURER="Rockchip"
+CONFIG_USB_GADGET_VENDOR_NUM=0x2207
+CONFIG_USB_GADGET_PRODUCT_NUM=0x330d
+CONFIG_DM_VIDEO=y
+CONFIG_DISPLAY=y
+CONFIG_DRM_ROCKCHIP=y
+CONFIG_DRM_ROCKCHIP_INNO_VIDEO_COMBO_PHY=y
+CONFIG_DRM_ROCKCHIP_DW_MIPI_DSI=y
+CONFIG_DRM_ROCKCHIP_LVDS=y
+CONFIG_DRM_ROCKCHIP_RGB=y
+CONFIG_DRM_ROCKCHIP_RK618=y
+CONFIG_VIDEO_BRIDGE_ANALOGIX_ANX6345=y
+CONFIG_LCD=y
+CONFIG_USE_TINY_PRINTF=y
+CONFIG_SPL_TINY_MEMSET=y
+CONFIG_TPL_TINY_MEMSET=y
+CONFIG_LZ4=y
+CONFIG_LZO=y
+CONFIG_ERRNO_STR=y
+CONFIG_EFI_LOADER=y
+CONFIG_CMD_EFIDEBUG=y
+CONFIG_CMD_NVEDIT_EFI=y
+CONFIG_TEST_ROCKCHIP=y
+CONFIG_SECO_ENV_AUTOSET=y
+# CONFIG_SECO_ENV_MANEGER is not set
+# CONFIG_CMD_SECO_CONFIG_RCK is not set
+CONFIG_OF_LIBFDT_OVERLAY=y
+# CONFIG_SECO_SYSTEM_DATA is not set
+# CONFIG_SECO_SYSDATA_IN_MMC is not set
+# CONFIG_CMD_SECO_SYSDATA is not set
+# CONFIG_CMD_SECO_SWITCHPART is not set
diff --git a/include/configs/seco_environment.h b/include/configs/seco_environment.h
new file mode 100644
index 0000000..0ceb387
--- /dev/null
+++ b/include/configs/seco_environment.h
@@ -0,0 +1,406 @@
+#ifndef __SECO_ENVIRONMENT_H
+#define __SECO_ENVIRONMENT_H
+
+
+/*
+ *
+ * Variable              Scope                 Description
+ * --------------------------------------------------------------------------------------------------------
+ *
+ * kernel_device_id      eMMC/SD/              numeric id of device
+ * kernel_partition      eMMC/SD/USB/SATA      numeric id of device's partition
+ * kernel_file           eMMC/SD/USB/SATA      absolute path (folder+name) of file to load
+ * kernel_load2ram       all                   u-boot command to exec in order to load file to memory
+ *
+ * fdt_autodetect        all                   automatic detect the corret dtb file name (cpu type based)
+ * fdt_device_id         eMMC/SD/              numeric id of device
+ * fdt_partition         eMMC/SD/USB/SATA      numeric id of device's partition
+ * fdt_file              eMMC/SD/USB/SATA      absolute path (folder+name) of file to load
+ * fdt_load              all                   u-boot command to exec in order to load file to memory
+ *
+ * ramfs_use             all                   0 = do not use ramfs ; 1 = use ramfs
+ * ramfs_device_id       eMMC/SD/              numeric id of device
+ * ramfs_partition       eMMC/SD/USB/SATA      numeric id of device's partition
+ * ramfs_file            eMMC/SD/USB/SATA      absolute path (folder+name) of file to load
+ * ramfs_load2ram        all                   u-boot command to exec in order to load file to memory
+ *
+ * root_device_id        eMMC/SD/              numeric id of device
+ * root_partition        eMMC/SD/USB/SATA      numeric id of device's partition
+ * root_mount            all                   u-boot command to generate bootargs about FS mount point
+ *
+ * ipaddr                TFTP                  target ip
+ * netmask               TFTP                  target netmask
+ * nfs_ip_client         NFS                   static IP of client
+ * nfs_netmask           NFS                   netmask for client
+ * nfs_ip_server         NFS                   static IP of server
+ * nfs_path              NFS                   remote path of FS folder
+ * eth_if                NFS                   id of the eth inteface to use for network Filesystem
+ *
+ */
+
+/* ____________________________________________________________________________
+  |                                                                            |
+  |                                 ENV MACROS                                 |
+  |____________________________________________________________________________|
+*/
+
+/* ----------------- BOOTSCRIPT ------------------ */
+
+#define MACRO_ENV_BOOTSCRIPT_SRC_USDHCI  \
+	load mmc ${bootscript_device_id}:${bootscript_partition} ${bootscript_loadaddr} ${script}
+
+#define MACRO_ENV_BOOTENV_SRC_USDHCI \
+	load mmc ${bootscript_device_id}:${bootenv_partition} ${bootenv_loadaddr} ${envtxt}
+
+
+/* ------------------- KERNEL -------------------- */
+
+#define MACRO_ENV_KERNEL_SRC_USDHCI     \
+	mmc dev ${kernel_device_id}; load mmc ${kernel_device_id}:${kernel_partition}  ${kernel_loadaddr} ${kernel_file}
+
+#define MACRO_ENV_KERNEL_SRC_USB     \
+	usb start; load usb ${kernel_device_id}:${kernel_partition} ${kernel_loadaddr} ${kernel_file}
+
+#define MACRO_ENV_KERNEL_SRC_SATA    \
+	sata init; load sata 0:${kernel_partition} ${kernel_loadaddr} ${kernel_file}
+
+#define MACRO_ENV_KERNEL_SRC_SPI     \
+	sf probe 0; sf ${kernel_loadaddr} ${kernel_spi_addr} ${kernel_spi_len}
+
+#define MACRO_ENV_KERNEL_SRC_TFTP   \
+	if test "${tftp_use_dhcp}" = "0"; then tftpboot ${kernel_loadaddr} ${kernel_file}; else dhcp ${kernel_loadaddr} ${kernel_file}; fi
+
+
+/* -------------------- FDT ---------------------- */
+
+#define MACRO_ENV_FDT_SRC_USDHCI     \
+	load mmc ${fdt_device_id}:${fdt_partition}  ${fdt_loadaddr} ${fdt_file}
+
+#define MACRO_ENV_FDT_SRC_USB     \
+	usb start; load usb ${fdt_device_id}:${fdt_partition} ${fdt_loadaddr} ${fdt_file}
+
+#define MACRO_ENV_FDT_SRC_SATA    \
+	sata init; load sata 0:${fdt_partition} ${fdt_loadaddr} ${fdt_file}
+
+#define MACRO_ENV_FDT_SRC_SPI     \
+	sf probe 0; sf ${fdt_loadaddr} ${fdt_spi_addr} ${fdt_spi_len}
+
+#define MACRO_ENV_FDT_SRC_TFTP   \
+	if test "${tftp_use_dhcp}" = "0"; then tftpboot ${fdt_loadaddr} ${fdt_file}; else dhcp ${fdt_loadaddr} ${fdt_file}; fi
+
+#ifdef CONFIG_OF_LIBFDT_OVERLAY
+#define MACRO_ENV_FDT_LOAD_OVERLAY_BASE \
+	fdt addr ${fdt_loadaddr}; fdt resize ${fdt_resize}; \
+	seco_config fdtoverlay ; \
+	if test "${per_use_seco_config}" = "1"; then if test -n "${fdt_overlay_per_cmd}"; then run fdt_overlay_per_cmd; fi; else; if test -n "${fdt_overlay_per_dynamic_cmd}"; then run fdt_overlay_per_dynamic_cmd; fi; fi; \
+	if test "${video_use_seco_config}" = "1"; then if test -n "${fdt_overlay_video_cmd}"; then run fdt_overlay_video_cmd; fi; else; if test -n "${fdt_overlay_video_dynamic_cmd}"; then run fdt_overlay_video_dynamic_cmd; fi; fi
+
+
+#define MACRO_ENV_FDT_OVERLAY_SRC_USDHCI     \
+	load mmc ${fdt_device_id}:${fdt_partition}
+
+#define MACRO_ENV_FDT_OVERLAY_SRC_USB     \
+	usb start; load usb ${fdt_device_id}:${fdt_partition}
+
+#define MACRO_ENV_FDT_OVERLAY_SRC_SATA    \
+	sata init; load sata 0:${fdt_partition}
+
+#define MACRO_ENV_FDT_OVERLAY_SRC_SPI     \
+	sf probe 0; sf ${fdt_loadaddr} ${fdt_spi_addr} ${fdt_spi_len}
+
+#define MACRO_ENV_FDT_OVERLAY_SRC_TFTP   \
+	tftpboot
+
+#define MACRO_ENV_FDT_OVERLAY_APPLY   \
+	fdt apply
+#else
+#define MACRO_ENV_FDT_LOAD_OVERLAY_BASE "\0"
+#endif    /* CONFIG_OF_LIBFDT_OVERLAY */
+
+
+/* ------------------- RAMFS --------------------- */
+
+#define MACRO_ENV_RAMFS_SRC_USDHCI     \
+	load mmc ${ramfs_device_id}:${ramfs_partition}  ${ramfs_loadaddr} ${ramfs_file}
+
+#define MACRO_ENV_RAMFS_SRC_USB     \
+	usb start; load usb ${ramfs_device_id}:${ramfs_partition} ${ramfs_loadaddr} ${ramfs_file}
+
+#define MACRO_ENV_RAMFS_SRC_SATA    \
+	sata init; load sata 0:${ramfs_partition} ${ramfs_loadaddr} ${ramfs_file}
+
+#define MACRO_ENV_RAMFS_SRC_SPI     \
+	sf probe 0; sf ${ramfs_loadaddr} ${ramfs_spi_addr} ${ramfs_spi_len}
+
+#define MACRO_ENV_RAMFS_SRC_TFTP   \
+	tftpboot ${ramfs_loadaddr} ${ramfs_file}
+
+
+/* ------------------ FILESYSTEM ------------------ */
+
+#define MACRO_ENV_FS_COMMON  rootwait rw
+
+#define MACRO_ENV_FS_SRC_USDHCI   \
+	setenv root_dev root=/dev/mmcblk${root_device_id}p${root_partition} rootwait rw
+
+#define MACRO_ENV_FS_SRC_USB      \
+	setenv root_dev setenv root_dev root=/dev/sda${root_partition} rootwait rw
+
+#define MACRO_ENV_FS_SRC_SATA     \
+	setenv root_dev setenv root=/dev/sda${root_partition} rootwait rw
+
+#define MACRO_ENV_FS_SRC_NFS      \
+	run set_ip; run set_remote_rootfs; setenv root_dev ${remote_fs} ip=${ip}
+
+#define MACRO_SET_IP \
+	if test "${nfs_use_dhcp}" = "0"; then \
+		run ipsetup; \
+		setenv ip "${nfs_ip_client}:::${nfs_netmask}::eth0:off"; \
+	else \
+		setenv ip ":::::eth0:dhcp"; \
+	fi; \
+
+#define MACRO_SET_REMOTE_ROOTFS \
+	if test "${nfs_use_dhcp}" = "0"; then \
+		setenv remote_fs "root=/dev/nfs rootfstype=nfs nfsroot=${nfs_ip_server}:/${nfs_path},wsize=4096,rsize=4096,nolock,nfsvers=3 rootwait rw"; \
+	else \
+		if test "${nfs_use_dhcp_autopath}" = "0"; then \
+			setenv remote_fs "root=/dev/nfs rootfstype=nfs nfsroot=/${nfs_path},wsize=4096,rsize=4096,nolock,nfsvers=3 rootwait rw"; \
+		else \
+			setenv remote_fs "root=/dev/nfs rootfstype=nfs rootwait rw"; \
+		fi; \
+	fi
+
+
+#define CONFIG_SERVERIP                          13.0.0.1
+#define CONFIG_IPADDR                            13.0.0.10
+#define CONFIG_NETMASK                           255.255.255.0
+#define DEF_NFS_PATH                             "targetfs/"
+
+#define ENV_BOOTARGS_BASE  setenv bootargs ${console_interface} ${memory} ${cpu_freq} ${videomode} vt.global_cursor_default=0 ${root_dev}
+
+#define ENV_COMMON \
+	"bootdelay="__stringify(CONFIG_BOOTDELAY)"\0" \
+	"stdin=serial\0" \
+	"stdout=serial\0" \
+	"stderr=serial\0" \
+	"mmcautodetect="ENV_MMCAUTODETECT"\0" \
+	"fdt_autodetect="ENV_FDTAUTODETECT"\0" \
+	"mem_autodetect="ENV_MEMAUTODETECT"\0" \
+	"run_from_tftp=0\0" \
+	"tftp_use_dhcp=0\0" \
+	"per_use_seco_config=0\0" \
+	"video_use_seco_config=0\0"
+
+#define ENV_ARGS_BASE \
+	"console_interface='console=" __stringify(ENV_CONSOLE_DEV) "," __stringify(CONFIG_BAUDRATE)"'\0" \
+	"bootargs_base="__stringify(ENV_BOOTARGS_BASE)"\0"
+
+#define ENV_BOOTSCRIPT \
+	"script=seco_boot.scr\0" \
+	"envtxt=/loader/uEnv.txt\0" \
+	"bootscript_device_id="__stringify(ENV_SYS_MMC_ENV_DEV)"\0" \
+	"bootscript_partition="__stringify(ENV_SYS_MMC_BOOSCRIPT_PART)"\0" \
+	"bootenv_partition="__stringify(ENV_SYS_MMC_BOOATENV_PART)"\0" \
+	"bootscript_loadaddr="__stringify(ENV_BOOTSCRIPT_LOADADDR)"\0" \
+	"bootenv_loadaddr="__stringify(ENV_RAMFS_LOADADDR)"\0" \
+	"bootscript_load_usdhci2ram="__stringify(MACRO_ENV_BOOTSCRIPT_SRC_USDHCI)"\0" \
+	"bootenv_load_usdhci2ram="__stringify(MACRO_ENV_BOOTENV_SRC_USDHCI)"\0"
+
+#define ENV_KERNEL \
+	"kernel_device_id="__stringify(ENV_SYS_MMC_ENV_DEV)"\0" \
+	"kernel_partition="__stringify(ENV_SYS_MMC_KERNEL_PART)"\0" \
+	"kernel_loadaddr="__stringify(ENV_KERNEL_LOADADDR)"\0" \
+	"kernel_file="__stringify(ENV_KERNEL_FILENAME)"\0" \
+	"kernel_load_usdhci2ram="__stringify(MACRO_ENV_KERNEL_SRC_USDHCI)"\0" \
+	"kernel_load_usb2ram="__stringify(MACRO_ENV_KERNEL_SRC_USB)"\0" \
+	"kernel_load_eth2ram="__stringify(MACRO_ENV_KERNEL_SRC_TFTP)"\0" \
+	"kernel_load2ram="__stringify(MACRO_ENV_KERNEL_SRC_USDHCI)"\0"
+
+#ifndef CONFIG_OF_LIBFDT_OVERLAY
+
+#define ENV_FDT \
+	"fdt_device_id="__stringify(ENV_SYS_MMC_ENV_DEV)"\0" \
+	"fdt_partition="__stringify(ENV_SYS_MMC_FDT_PART)"\0" \
+	"fdt_loadaddr="__stringify(ENV_FDT_LOADADDR)"\0" \
+	"fdt_file="__stringify(ENV_DEFAULT_FDT_FILE)"\0" \
+	"fdt_high=0xffffffff\0" \
+	"fdt_load_usdhci2ram="__stringify(MACRO_ENV_FDT_SRC_USDHCI)"\0" \
+	"fdt_load_usb2ram="__stringify(MACRO_ENV_FDT_SRC_USB)"\0" \
+	"fdt_load_eth2ram="__stringify(MACRO_ENV_FDT_SRC_TFTP)"\0" \
+	"fdt_load2ram="__stringify(MACRO_ENV_FDT_SRC_USDHCI)"\0"
+
+#else
+
+#define ENV_FDT \
+	"fdt_device_id="__stringify(ENV_SYS_MMC_ENV_DEV)"\0" \
+	"fdt_partition="__stringify(ENV_SYS_MMC_FDT_PART)"\0" \
+	"fdt_loadaddr="__stringify(ENV_FDT_LOADADDR)"\0" \
+	"fdt_file="__stringify(ENV_DEFAULT_FDT_FILE)"\0" \
+	"fdt_high=0xffffffff\0" \
+	"fdt_resize="__stringify(ENV_FDT_RESIZE)"\0" \
+	"fdt_load_usdhci2ram="__stringify(MACRO_ENV_FDT_SRC_USDHCI)"\0" \
+	"fdt_load_usb2ram="__stringify(MACRO_ENV_FDT_SRC_USB)"\0" \
+	"fdt_load_eth2ram="__stringify(MACRO_ENV_FDT_SRC_TFTP)"\0" \
+	"fdt_load2ram="__stringify(MACRO_ENV_FDT_SRC_USDHCI)"\0" \
+	"fdt_overlay_load2ram="__stringify(MACRO_ENV_FDT_LOAD_OVERLAY_BASE)"\0"
+
+#endif  /* CONFIG_OF_LIBFDT_OVERLAY */
+
+#define ENV_RAMFS \
+	"ramfs_use=0\0" \
+	"ramfs_device_id="__stringify(ENV_SYS_MMC_ENV_DEV)"\0" \
+	"ramfs_partition="__stringify(ENV_SYS_MMC_RAMFS_PART)"\0" \
+	"ramfs_loadaddr="__stringify(ENV_RAMFS_LOADADDR)"\0" \
+	"ramfs_file="__stringify(ENV_RAMFS_FILENAME)"\0" \
+	"ramfs_load_usdhci2ram="__stringify(MACRO_ENV_RAMFS_SRC_USDHCI)"\0" \
+	"ramfs_load_usb2ram="__stringify(MACRO_ENV_RAMFS_SRC_USB)"\0" \
+	"ramfs_load_eth2ram="__stringify(MACRO_ENV_RAMFS_SRC_TFTP)"\0" \
+	"ramfs_load2ram="__stringify(MACRO_ENV_RAMFS_SRC_USDHCI)"\0"
+
+#define ENV_ROOT \
+	"root_device_id="__stringify(ENV_ROOT_DEV_ID)"\0" \
+	"root_partition="__stringify(ENV_SYS_MMC_ROOTFS_PART)"\0" \
+	"root_load_usdhci="__stringify(MACRO_ENV_FS_SRC_USDHCI)"\0" \
+	"root_load_usb="__stringify(MACRO_ENV_FS_SRC_USB)"\0" \
+	"root_load_eth="__stringify(MACRO_ENV_FS_SRC_NFS)"\0" \
+	"run_from_nfs=0\0" \
+	"root_mount="__stringify(MACRO_ENV_FS_SRC_USDHCI)"\0"
+
+#define ENV_NETWORK \
+	"ipaddr="__stringify(CONFIG_IPADDR)"\0" \
+	"netmask=255.255.255.0\0" \
+	"eth_if=0\0" \
+	"nfs_use_dhcp=0\0" \
+	"nfs_use_dhcp_autopath=0\0" \
+	"ipsetup=setenv ipaddr ${ipaddr}; setenv serverip ${serverip};\0" \
+	"set_remote_rootfs="__stringify(MACRO_SET_REMOTE_ROOTFS)"\0" \
+	"set_ip="__stringify(MACRO_SET_IP)"\0" \
+	"nfs_ip_client="__stringify(CONFIG_IPADDR)"\0" \
+	"nfs_ip_server="__stringify(CONFIG_SERVERIP)"\0" \
+	"nfs_netmask="__stringify(CONFIG_NETMASK)"\0" \
+	"nfs_path="__stringify(DEF_NFS_PATH)"\0"
+
+#ifdef CONFIG_EFI_LOADER
+
+#define EFI_SYSTEM_PARTITION    1
+#undef  ENV_SYS_MMC_BOOSCRIPT_PART
+#define ENV_SYS_MMC_BOOSCRIPT_PART    1
+#define ENV_EFI \
+	"efi_partition="__stringify(EFI_SYSTEM_PARTITION)"\0" \
+	"efi_file=EFI/BOOT/bootaa64.efi\0" \
+	"efi_device_id="__stringify(CONFIG_SYS_MMC_ENV_DEV)"\0" \
+	"efi_load=mmc dev ${efi_device_id}; fatload mmc ${efi_device_id}:${efi_partition} ${kernel_loadaddr} ${efi_file}\0"
+
+#define ENV_CMD_SET_BOOT \
+  	"if test \"${bootusb}\" = \"true\"; then " \
+  	"  for dpart in 1 2; do " \
+  	"   if load usb 0:${dpart} 0x00500000" __stringify(ENV_UENV_FILE_NAME)"; then " \
+  	"     env import -t 0x00500000 600; run usb_boot; fi; " \
+  	"  done; " \
+  	"fi; " \
+	"mmc dev ${bootscript_device_id}; " \
+	"if run bootscript_load_usdhci2ram; then " \
+		"echo ==> Running bootscript mode... ; " \
+		" source "__stringify(ENV_BOOTSCRIPT_LOADADDR)"; " \
+	"fi; " \
+	"run bootargs_base; " \
+	"run fdt_load2ram; " \
+	"run root_mount; " \
+	"run bootargs_base; " \
+	"echo Trying to boot via UEFI variables Boot####, BootOrder, and BootNext... ; " \
+	"bootefi bootmgr ${fdt_loadaddr}; " \
+	"if test $? -ne 0; then " \
+		"echo No entries from ubootefi.var... Running directly via UEFI binary... ; " \
+		"run efi_load; " \
+		"bootefi ${kernel_loadaddr} ${fdt_loadaddr}; " \
+	"fi;"
+
+#else /*Boot environment without UEFI support*/
+
+#define ENV_EFI
+
+#ifndef CONFIG_OF_LIBFDT_OVERLAY
+
+#define ENV_CMD_SET_BOOT \
+  	"if test \"${bootusb}\" = \"true\"; then " \
+  	"  for dpart in 1 2; do " \
+  	"   if load usb 0:${dpart} 0x00500000" __stringify(ENV_UENV_FILE_NAME)"; then " \
+  	"     env import -t 0x00500000 600; run usb_boot; fi; " \
+  	"  done; " \
+  	"fi; " \
+	"mmc dev ${bootscript_device_id}; " \
+	"if run bootscript_load_usdhci2ram; then " \
+		"echo ==> Running bootscript mode... ; " \
+		" source "__stringify(ENV_BOOTSCRIPT_LOADADDR)"; " \
+	"fi; " \
+	"echo ==> Running in Normal Mode... ; " \
+	"run bootargs_base; " \
+	"run kernel_load2ram; " \
+	"run fdt_load2ram; " \
+	"run root_mount; " \
+	"run bootargs_base; " \
+	"if test ${ramfs_use} = 1; then " \
+		" run ramfs_load2ram; " \
+		__stringify(DEF_NFS_PATH)" ${kernel_loadaddr} ${ramfs_loadaddr} ${fdt_loadaddr}; " \
+	"else " \
+		__stringify(DEF_NFS_PATH)" ${kernel_loadaddr} - ${fdt_loadaddr}; " \
+	"fi\0"
+
+#else
+
+#define ENV_CMD_SET_BOOT \
+  	"if test \"${bootusb}\" = \"true\"; then " \
+  	"  for fstype in fat ext2; do " \
+  	"   if ${fstype}load usb 0:1 0x00500000 " __stringify(ENV_UENV_FILE_NAME)"; then " \
+  	"     env import -t 0x00500000 600; run usb_boot; fi; " \
+  	"  done; " \
+  	"fi; " \
+	"mmc dev ${bootscript_device_id}; " \
+	"if run bootscript_load_usdhci2ram; then " \
+		"echo ==> Running bootscript mode... ; " \
+		" source "__stringify(ENV_BOOTSCRIPT_LOADADDR)"; " \
+	"fi; " \
+	"echo ==> Running in Normal Mode... ; " \
+	"run bootargs_base; " \
+	"run kernel_load2ram; " \
+	"run fdt_load2ram; " \
+	"run fdt_overlay_load2ram; " \
+	"run root_mount; " \
+	"run bootargs_base; " \
+	"if test ${ramfs_use} = 1; then " \
+		" run ramfs_load2ram; " \
+		__stringify(ENV_BOOT_TYPE)" ${kernel_loadaddr} ${ramfs_loadaddr} ${fdt_loadaddr}; " \
+	"else " \
+		__stringify(ENV_BOOT_TYPE)" ${kernel_loadaddr} - ${fdt_loadaddr}; " \
+	"fi\0"
+
+#endif  /* CONFIG_OF_LIBFDT_OVERLAY */
+#endif /* CONFIG_EFI_LOADER */
+
+#ifndef CONFIG_PREBOOT
+#define CONFIG_PREBOOT
+#endif
+
+#ifndef ENV_VIDEO_DEFAULT
+#define ENV_VIDEO_DEFAULT
+#endif
+
+#define ENV_PREBOOT "preboot=echo Start boot...\0"
+
+#undef CONFIG_EXTRA_ENV_SETTINGS
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	ENV_COMMON \
+	ENV_ARGS_BASE \
+	ENV_NETWORK \
+	ENV_BOOTSCRIPT \
+	ENV_KERNEL \
+	ENV_FDT \
+	ENV_RAMFS \
+	ENV_ROOT \
+	ENV_PREBOOT \
+	ENV_VIDEO_DEFAULT \
+	ENV_EFI \
+	"bootcmd=" ENV_CMD_SET_BOOT "\0"
+
+#endif     /*  __SECO_ENVIRONMENT_H  */
diff --git a/include/configs/seco_px30_common.h b/include/configs/seco_px30_common.h
new file mode 100644
index 0000000..602e99b
--- /dev/null
+++ b/include/configs/seco_px30_common.h
@@ -0,0 +1,118 @@
+/*
+ * (C) Copyright 2017 Rockchip Electronics Co., Ltd
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __CONFIG_SECO_PX30_COMMON_H
+#define __CONFIG_SECO_PX30_COMMON_H
+
+#include "rockchip-common.h"
+
+#define CONFIG_SYS_MALLOC_LEN                 (32 << 20)
+#define CONFIG_SYS_CBSIZE                     1024
+#define CONFIG_SKIP_LOWLEVEL_INIT
+
+#define CONFIG_SPL_FRAMEWORK
+
+#define CONFIG_SYS_NS16550_MEM32
+
+#define CONFIG_SYS_TEXT_BASE                  0x00200000
+#define CONFIG_SYS_INIT_SP_ADDR               0x00400000
+#define CONFIG_SYS_LOAD_ADDR                  0x00800800
+#define CONFIG_SPL_STACK                      0x00400000
+#define CONFIG_SPL_TEXT_BASE                  0x00000000
+#define CONFIG_SPL_MAX_SIZE                   0x40000
+#define CONFIG_SPL_BSS_START_ADDR             0x2000000
+#define CONFIG_SPL_BSS_MAX_SIZE               0x2000
+#define CONFIG_SYS_BOOTM_LEN                  (64 << 20)   /* 64M */
+
+#define CONFIG_IRAM_BASE                      0xff020000
+
+#define COUNTER_FREQUENCY                     24000000
+#define CONFIG_ROCKCHIP_STIMER_BASE           0xff220020
+
+#define GICD_BASE                             0xff131000
+#define GICC_BASE                             0xff132000
+
+#define CONFIG_SYS_BOOTM_LEN                  (64 << 20)   /* 64M */
+
+/* MMC/SD IP block */
+#define CONFIG_BOUNCE_BUFFER
+
+#define CONFIG_SYS_SDRAM_BASE                 0
+#define SDRAM_MAX_SIZE                        0xff000000
+#define SDRAM_BANK_SIZE                       (2UL << 30)
+#ifdef CONFIG_DM_DVFS
+#define CONFIG_PREBOOT                        "dvfs repeat"
+#else
+#define CONFIG_PREBOOT
+#endif
+
+#ifndef CONFIG_SPL_BUILD
+
+/* usb mass storage */
+#define CONFIG_USB_FUNCTION_MASS_STORAGE
+/*#define CONFIG_ROCKUSB_G_DNL_PID            0x330d*/
+
+#ifdef CONFIG_ARM64
+#define ENV_MEM_LAYOUT_SETTINGS \
+	"scriptaddr=0x00500000\0" \
+	"pxefile_addr_r=0x00600000\0" \
+	"fdt_addr_r=0x08300000\0" \
+	"kernel_addr_r=0x00280000\0" \
+	"kernel_addr_c=0x03e80000\0" \
+	"ramdisk_addr_r=0x0a200000\0"
+#else
+#define ENV_MEM_LAYOUT_SETTINGS \
+	"scriptaddr=0x00000000\0" \
+	"pxefile_addr_r=0x00100000\0" \
+	"fdt_addr_r=0x08300000\0" \
+	"kernel_addr_r=0x02008000\0" \
+	"ramdisk_addr_r=0x0a200000\0"
+#endif
+
+#include <config_distro_bootcmd.h>
+#define CONFIG_EXTRA_ENV_SETTINGS \
+	ENV_MEM_LAYOUT_SETTINGS \
+	"partitions=" PARTS_DEFAULT \
+	ROCKCHIP_DEVICE_SETTINGS \
+	RKIMG_DET_BOOTDEV \
+	BOOTENV
+#endif
+
+/* rockchip ohci host driver */
+#define CONFIG_USB_OHCI_NEW
+#define CONFIG_SYS_USB_OHCI_MAX_ROOT_PORTS    1
+
+#define CONFIG_SYS_MMC_ENV_PART               0
+#define CONFIG_OF_LIBFDT_OVERLAY
+
+#define FDT_LOADADDR                          0x08300000
+#define OVERLAY_LOADADDR_BASE                 0x79000000
+#define OVERLAY_LOADADDR_OFFSET               0x00200000
+#define HDPRX_LOADADDR                        0x88800000
+#define HDPTX_LOADADDR                        0x88000000
+
+#define FDT_RESIZE                            0x60000
+
+#define ENV_KERNEL_LOADADDR                   0x00280000
+#define ENV_KERNEL_FILENAME                   "Image"
+#define ENV_FDT_LOADADDR                      0x08300000
+#define ENV_FDT_OVERLAY_BASEADDR              0x08100000
+#define ENV_FDT_OVERLAY_BASEADDR_OFFSET       0x00020000
+#define ENV_FDT_RESIZE                        0xc0000
+#define ENV_RAMFS_LOADADDR                    0x0a200000
+#define ENV_BOOTSCRIPT_LOADADDR               0x00500000
+
+#define DEFAULT_OVERLAY_FILE                  ""
+
+#define ENV_BOOT_TYPE                         "booti"
+
+#define ROCKCHIP_DEVICE_SETTINGS \
+		"stdout=serial,vidconsole\0" \
+		"stderr=serial,vidconsole\0"
+
+#define ENV_CONSOLE_DEV                       ROCKCHIP_DEVICE_SETTINGS
+
+#endif
diff --git a/include/configs/seco_px30_d23.h b/include/configs/seco_px30_d23.h
new file mode 100644
index 0000000..74aabb9
--- /dev/null
+++ b/include/configs/seco_px30_d23.h
@@ -0,0 +1,72 @@
+/*
+ * (C) Copyright 2020-2021 Seco S.p.A.
+ *
+ * SPDX-License-Identifier:     GPL-2.0+
+ */
+
+#ifndef __SECO_D23_PX30_H
+#define __SECO_D23_PX30_H
+
+#include <configs/seco_px30_common.h>
+
+
+#undef CONFIG_CONSOLE_SCROLL_LINES
+#define CONFIG_CONSOLE_SCROLL_LINES              10
+#define CONFIG_SUPPORT_EMMC_RPMB
+
+//#ifndef CONFIG_SPL_BUILD
+//#undef CONFIG_BOOTCOMMAND
+//#define CONFIG_BOOTCOMMAND RKIMG_BOOTCOMMAND
+//#endif
+
+#define CONFIG_MMC_SDHCI_SDMA
+#define CONFIG_SYS_MMC_ENV_DEV                   0
+
+#define ENV_ROOT_DEV_ID                          1
+#define ENV_ROOT_PARTITION                       2
+
+#define SDRAM_BANK_SIZE                          (2UL << 30)
+#define CONFIG_MISC_INIT_R
+#define CONFIG_SERIAL_TAG
+#define CONFIG_ENV_OVERWRITE
+
+#define CONFIG_BMP_16BPP
+#define CONFIG_BMP_24BPP
+#define CONFIG_BMP_32BPP
+
+/* SECOCONFIG VARIABLEs */
+
+/* eMMC uSD Configuration */
+#define BOOT_ID_EMMC 0
+#define ROOT_ID_EMMC 0
+#define BOOT_ID_USD  1
+#define ROOT_ID_USD  1
+#define BOOT_ID_EXT_SD  2
+#define ROOT_ID_EXT_SD  2
+#define SECO_NUM_BOOT_DEV                        3
+
+#define ENV_MMCAUTODETECT                        "yes"
+#define ENV_FDTAUTODETECT                        "yes"
+#define ENV_MEMAUTODETECT                        "yes"
+
+/*  boot file  */
+#define ENV_SYS_MMC_ENV_DEV                      0
+#define ENV_SYS_MMC_KERNEL_PART                  3
+#define ENV_SYS_MMC_FDT_PART                     3
+#define ENV_SYS_MMC_RAMFS_PART                   3
+/*  boot additional file  */
+#define ENV_SYS_MMC_BOOSCRIPT_PART               3
+#define ENV_SYS_MMC_BOOATENV_PART                4
+/*  rootfs file  */
+#define ENV_SYS_MMC_ROOTFS_PART                  4
+/*  video outputs */
+#define ENV_NUM_VIDEO_OUTPUT                     0   /* lvds, edp, hdmi, typeC */
+
+#define ENV_VIDEO_DEFAULT                        "fdt_overlay_video_cmd=load mmc ${fdt_device_id}:${fdt_partition} 0x08100000 seco-px30-d23-hdmi.dtbo; fdt apply  0x08100000;\0"
+#define ENV_LOADADDR                             CONFIG_LOADADDR
+#define ENV_DEFAULT_FDT_FILE                     "seco-px30-d23.dtb"
+#define ENV_UENV_FILE_NAME                       uEnvD23.txt
+
+#include "seco_environment.h"
+
+#endif
diff --git a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
index 62b8ba3a4a..57eb37016d 100644
--- a/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
+++ b/drivers/phy/rockchip/phy-rockchip-inno-usb2.c
@@ -243,6 +244,35 @@ static int rockchip_usb2phy_bind(struct udevice *dev)
 	return ret;
 }
 
+static const struct rockchip_usb2phy_cfg rk3328_usb2phy_cfgs[] = {
+	{
+		.reg = 0x100,
+		.port_cfgs	= {
+			[USB2PHY_PORT_OTG] = {
+				.phy_sus	= { 0x0100, 8, 0, 0, 0x1d1 },
+				.bvalid_det_en	= { 0x0110, 2, 2, 0, 1 },
+				.bvalid_det_st	= { 0x0114, 2, 2, 0, 1 },
+				.bvalid_det_clr = { 0x0118, 2, 2, 0, 1 },
+				.ls_det_en	= { 0x0110, 0, 0, 0, 1 },
+				.ls_det_st	= { 0x0114, 0, 0, 0, 1 },
+				.ls_det_clr	= { 0x0118, 0, 0, 0, 1 },
+				.utmi_avalid	= { 0x0120, 10, 10, 0, 1 },
+				.utmi_bvalid	= { 0x0120, 9, 9, 0, 1 },
+				.utmi_ls	= { 0x0120, 5, 4, 0, 1 },
+			},
+			[USB2PHY_PORT_HOST] = {
+				.phy_sus	= { 0x104, 8, 0, 0, 0x1d1 },
+				.ls_det_en	= { 0x110, 1, 1, 0, 1 },
+				.ls_det_st	= { 0x114, 1, 1, 0, 1 },
+				.ls_det_clr	= { 0x118, 1, 1, 0, 1 },
+				.utmi_ls	= { 0x120, 17, 16, 0, 1 },
+				.utmi_hstdet	= { 0x120, 19, 19, 0, 1 }
+			}
+		},
+	},
+	{ /* sentinel */ }
+};
+
 static const struct rockchip_usb2phy_cfg rk3399_usb2phy_cfgs[] = {
 	{
 		.reg		= 0xe450,
@@ -290,10 +320,8 @@ static const struct rockchip_usb2phy_cfg rk3399_usb2phy_cfgs[] = {
 };
 
 static const struct udevice_id rockchip_usb2phy_ids[] = {
-	{
-		.compatible = "rockchip,rk3399-usb2phy",
-		.data = (ulong)&rk3399_usb2phy_cfgs,
-	},
+	{ .compatible = "rockchip,rk3328-usb2phy", .data = (ulong)&rk3328_usb2phy_cfgs },
+	{ .compatible = "rockchip,rk3399-usb2phy", .data = (ulong)&rk3399_usb2phy_cfgs },
 	{ /* sentinel */ }
 };
 
diff --git a/drivers/clk/rockchip/clk_px30.c b/drivers/clk/rockchip/clk_px30.c
index ea874e3f4b..c51cb20a18 100644
--- a/drivers/clk/rockchip/clk_px30.c
+++ b/drivers/clk/rockchip/clk_px30.c
@@ -1624,9 +1624,24 @@ static ulong px30_pmuclk_set_rate(struct clk *clk, ulong rate)
 	return ret;
 }
 
+static int px30_pmuclk_enable(struct clk *clk)
+{
+	switch (clk->id) {
+	/* Required to successfully probe the USBPHY driver */
+	case SCLK_USBPHY_REF:
+		break;
+	default:
+		debug("%s: unsupported clk %ld\n", __func__, clk->id);
+		return -ENOENT;
+	}
+
+	return 0;
+}
+
 static struct clk_ops px30_pmuclk_ops = {
 	.get_rate = px30_pmuclk_get_rate,
 	.set_rate = px30_pmuclk_set_rate,
+	.enable = px30_pmuclk_enable,
 };
 
 static void px30_pmuclk_init(struct px30_pmuclk_priv *priv)
